

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun May 28 01:45:10 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39   000000                     
    40                           ; Generated 23/03/2023 GMT
    41                           ; 
    42                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4620 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74   000000                     
    75                           	psect	idataCOMRAM
    76   001EC6                     __pidataCOMRAM:
    77                           	callstack 0
    78                           
    79                           ;initializer for _lat_register
    80   001EC6  89                 	db	137
    81   001EC7  0F                 	db	15
    82   001EC8  8A                 	db	138
    83   001EC9  0F                 	db	15
    84   001ECA  8B                 	db	139
    85   001ECB  0F                 	db	15
    86   001ECC  8C                 	db	140
    87   001ECD  0F                 	db	15
    88   001ECE  8D                 	db	141
    89   001ECF  0F                 	db	15
    90                           
    91                           ;initializer for _lcd8bit
    92   001ED0  02                 	db	2
    93   001ED1  0A                 	db	10
    94   001ED2  12                 	db	18
    95   001ED3  1A                 	db	26
    96   001ED4  22                 	db	34
    97   001ED5  2A                 	db	42
    98   001ED6  32                 	db	50
    99   001ED7  3A                 	db	58
   100   001ED8  03                 	db	3
   101   001ED9  0B                 	db	11
   102                           
   103                           ;initializer for _lcd4bit
   104   001EDA  13                 	db	19
   105   001EDB  1B                 	db	27
   106   001EDC  23                 	db	35
   107   001EDD  2B                 	db	43
   108   001EDE  33                 	db	51
   109   001EDF  3B                 	db	59
   110                           
   111                           	psect	idataBANK0
   112   001E16                     __pidataBANK0:
   113                           	callstack 0
   114                           
   115                           ;initializer for _port_register
   116   001E16  80                 	db	128
   117   001E17  0F                 	db	15
   118   001E18  81                 	db	129
   119   001E19  0F                 	db	15
   120   001E1A  82                 	db	130
   121   001E1B  0F                 	db	15
   122   001E1C  83                 	db	131
   123   001E1D  0F                 	db	15
   124   001E1E  84                 	db	132
   125   001E1F  0F                 	db	15
   126                           
   127                           ;initializer for _tris_register
   128   001E20  92                 	db	146
   129   001E21  0F                 	db	15
   130   001E22  93                 	db	147
   131   001E23  0F                 	db	15
   132   001E24  94                 	db	148
   133   001E25  0F                 	db	15
   134   001E26  95                 	db	149
   135   001E27  0F                 	db	15
   136   001E28  96                 	db	150
   137   001E29  0F                 	db	15
   138                           
   139                           ;initializer for main@F3174
   140   001E2A  0E                 	db	14
   141   001E2B  0E                 	db	14
   142   001E2C  1F                 	db	31
   143   001E2D  1F                 	db	31
   144   001E2E  1F                 	db	31
   145   001E2F  1F                 	db	31
   146   001E30  1F                 	db	31
   147   001E31  00                 	db	0
   148                           
   149                           ;initializer for main@F3172
   150   001E32  0E                 	db	14
   151   001E33  0A                 	db	10
   152   001E34  1F                 	db	31
   153   001E35  1F                 	db	31
   154   001E36  1F                 	db	31
   155   001E37  1F                 	db	31
   156   001E38  1F                 	db	31
   157   001E39  00                 	db	0
   158                           
   159                           ;initializer for main@F3170
   160   001E3A  0E                 	db	14
   161   001E3B  0A                 	db	10
   162   001E3C  1B                 	db	27
   163   001E3D  1F                 	db	31
   164   001E3E  1F                 	db	31
   165   001E3F  1F                 	db	31
   166   001E40  1F                 	db	31
   167   001E41  00                 	db	0
   168                           
   169                           ;initializer for main@F3168
   170   001E42  0E                 	db	14
   171   001E43  0A                 	db	10
   172   001E44  1B                 	db	27
   173   001E45  11                 	db	17
   174   001E46  1F                 	db	31
   175   001E47  1F                 	db	31
   176   001E48  1F                 	db	31
   177   001E49  00                 	db	0
   178                           
   179                           ;initializer for main@F3166
   180   001E4A  0E                 	db	14
   181   001E4B  0A                 	db	10
   182   001E4C  1B                 	db	27
   183   001E4D  11                 	db	17
   184   001E4E  11                 	db	17
   185   001E4F  1F                 	db	31
   186   001E50  1F                 	db	31
   187   001E51  00                 	db	0
   188                           
   189                           ;initializer for main@F3164
   190   001E52  0E                 	db	14
   191   001E53  0A                 	db	10
   192   001E54  1B                 	db	27
   193   001E55  11                 	db	17
   194   001E56  11                 	db	17
   195   001E57  11                 	db	17
   196   001E58  1F                 	db	31
   197   001E59  00                 	db	0
   198                           
   199                           	psect	smallconst
   200   001000                     __psmallconst:
   201                           	callstack 0
   202   001000  00                 	db	0
   203   001001                     _btn_value:
   204                           	callstack 0
   205   001001  37                 	db	55
   206   001002  38                 	db	56
   207   001003  39                 	db	57
   208   001004  2F                 	db	47
   209   001005  34                 	db	52
   210   001006  35                 	db	53
   211   001007  36                 	db	54
   212   001008  2A                 	db	42
   213   001009  31                 	db	49
   214   00100A  32                 	db	50
   215   00100B  33                 	db	51
   216   00100C  2D                 	db	45
   217   00100D  23                 	db	35
   218   00100E  30                 	db	48
   219   00100F  3D                 	db	61
   220   001010  2B                 	db	43
   221   001011                     __end_of_btn_value:
   222                           	callstack 0
   223   001011                     STR_2:
   224   001011  49                 	db	73	;'I'
   225   001012  42                 	db	66	;'B'
   226   001013  52                 	db	82	;'R'
   227   001014  41                 	db	65	;'A'
   228   001015  48                 	db	72	;'H'
   229   001016  45                 	db	69	;'E'
   230   001017  4D                 	db	77	;'M'
   231   001018  20                 	db	32
   232   001019  41                 	db	65	;'A'
   233   00101A  48                 	db	72	;'H'
   234   00101B  4D                 	db	77	;'M'
   235   00101C  45                 	db	69	;'E'
   236   00101D  44                 	db	68	;'D'
   237   00101E  00                 	db	0
   238   00101F  20                 	db	32
   239   001020  20                 	db	32
   240   001021  20                 	db	32
   241   001022  20                 	db	32
   242   001023  20                 	db	32
   243   001024  20                 	db	32
   244   001025  20                 	db	32
   245   001026  00                 	db	0
   246   001027                     STR_1:
   247   001027  57                 	db	87	;'W'
   248   001028  45                 	db	69	;'E'
   249   001029  4C                 	db	76	;'L'
   250   00102A  43                 	db	67	;'C'
   251   00102B  4F                 	db	79	;'O'
   252   00102C  4D                 	db	77	;'M'
   253   00102D  45                 	db	69	;'E'
   254   00102E  00                 	db	0
   255   00102F  4C                 	db	76	;'L'
   256   001030  6F                 	db	111	;'o'
   257   001031  61                 	db	97	;'a'
   258   001032  64                 	db	100	;'d'
   259   001033  69                 	db	105	;'i'
   260   001034  6E                 	db	110	;'n'
   261   001035  67                 	db	103	;'g'
   262   001036  00                 	db	0
   263   001037                     STR_10:
   264   001037  25                 	db	37
   265   001038  69                 	db	105	;'i'
   266   001039  00                 	db	0
   267   00103A  2E                 	db	46
   268   00103B  00                 	db	0
   269   00103C  00                 	db	0	; dummy byte at the end
   270   000000                     
   271                           	psect	nvCOMRAM
   272   00007E                     __pnvCOMRAM:
   273                           	callstack 0
   274   00007E                     _ret:
   275                           	callstack 0
   276   00007E                     	ds	1
   277   000000                     _PORTE	set	3972
   278   000000                     _PORTD	set	3971
   279   000000                     _PORTC	set	3970
   280   000000                     _PORTB	set	3969
   281   000000                     _PORTA	set	3968
   282   000000                     _LATA	set	3977
   283   000000                     _TRISA	set	3986
   284   000000                     _TRISE	set	3990
   285   000000                     _TRISD	set	3989
   286   000000                     _TRISC	set	3988
   287   000000                     _TRISB	set	3987
   288   000000                     _LATE	set	3981
   289   000000                     _LATD	set	3980
   290   000000                     _LATC	set	3979
   291   000000                     _LATB	set	3978
   292                           
   293                           ; #config settings
   294                           
   295                           	psect	cinit
   296   001D7E                     __pcinit:
   297                           	callstack 0
   298   001D7E                     start_initialization:
   299                           	callstack 0
   300   001D7E                     __initialization:
   301                           	callstack 0
   302                           
   303                           ; Initialize objects allocated to BANK0 (68 bytes)
   304                           ; load TBLPTR registers with __pidataBANK0
   305   001D7E  0E16               	movlw	low __pidataBANK0
   306   001D80  6EF6               	movwf	tblptrl,c
   307   001D82  0E1E               	movlw	high __pidataBANK0
   308   001D84  6EF7               	movwf	tblptrh,c
   309   001D86  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   310   001D88  6EF8               	movwf	tblptru,c
   311   001D8A  EE00  F080         	lfsr	0,__pdataBANK0
   312   001D8E  EE10 F044          	lfsr	1,68
   313   001D92                     copy_data0:
   314   001D92  0009               	tblrd		*+
   315   001D94  CFF5 FFEE          	movff	tablat,postinc0
   316   001D98  50E5               	movf	postdec1,w,c
   317   001D9A  50E1               	movf	fsr1l,w,c
   318   001D9C  E1FA               	bnz	copy_data0
   319                           
   320                           ; Initialize objects allocated to COMRAM (26 bytes)
   321                           ; load TBLPTR registers with __pidataCOMRAM
   322   001D9E  0EC6               	movlw	low __pidataCOMRAM
   323   001DA0  6EF6               	movwf	tblptrl,c
   324   001DA2  0E1E               	movlw	high __pidataCOMRAM
   325   001DA4  6EF7               	movwf	tblptrh,c
   326   001DA6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   327   001DA8  6EF8               	movwf	tblptru,c
   328   001DAA  EE00  F060         	lfsr	0,__pdataCOMRAM
   329   001DAE  EE10 F01A          	lfsr	1,26
   330   001DB2                     copy_data1:
   331   001DB2  0009               	tblrd		*+
   332   001DB4  CFF5 FFEE          	movff	tablat,postinc0
   333   001DB8  50E5               	movf	postdec1,w,c
   334   001DBA  50E1               	movf	fsr1l,w,c
   335   001DBC  E1FA               	bnz	copy_data1
   336                           
   337                           ; Clear objects allocated to COMRAM (4 bytes)
   338   001DBE  6A7D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   339   001DC0  6A7C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   340   001DC2  6A7B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   341   001DC4  6A7A               	clrf	__pbssCOMRAM& (0+255),c
   342   001DC6                     end_of_initialization:
   343                           	callstack 0
   344   001DC6                     __end_of__initialization:
   345                           	callstack 0
   346   001DC6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   347   001DC8  6EF8               	movwf	tblptru,c
   348   001DCA  0100               	movlb	0
   349   001DCC  EFF2  F008         	goto	_main	;jump to C main() function
   350                           
   351                           	psect	bssCOMRAM
   352   00007A                     __pbssCOMRAM:
   353                           	callstack 0
   354   00007A                     led_toggle@F3058:
   355                           	callstack 0
   356   00007A                     	ds	1
   357   00007B                     led_turn_off@F3053:
   358                           	callstack 0
   359   00007B                     	ds	1
   360   00007C                     led_turn_on@F3048:
   361                           	callstack 0
   362   00007C                     	ds	1
   363   00007D                     led_intialized@F3043:
   364                           	callstack 0
   365   00007D                     	ds	1
   366                           
   367                           	psect	dataCOMRAM
   368   000060                     __pdataCOMRAM:
   369                           	callstack 0
   370   000060                     _lat_register:
   371                           	callstack 0
   372   000060                     	ds	10
   373   00006A                     _lcd8bit:
   374                           	callstack 0
   375   00006A                     	ds	10
   376   000074                     _lcd4bit:
   377                           	callstack 0
   378   000074                     	ds	6
   379                           
   380                           	psect	dataBANK0
   381   000080                     __pdataBANK0:
   382                           	callstack 0
   383   000080                     _port_register:
   384                           	callstack 0
   385   000080                     	ds	10
   386   00008A                     _tris_register:
   387                           	callstack 0
   388   00008A                     	ds	10
   389   000094                     main@F3174:
   390                           	callstack 0
   391   000094                     	ds	8
   392   00009C                     main@F3172:
   393                           	callstack 0
   394   00009C                     	ds	8
   395   0000A4                     main@F3170:
   396                           	callstack 0
   397   0000A4                     	ds	8
   398   0000AC                     main@F3168:
   399                           	callstack 0
   400   0000AC                     	ds	8
   401   0000B4                     main@F3166:
   402                           	callstack 0
   403   0000B4                     	ds	8
   404   0000BC                     main@F3164:
   405                           	callstack 0
   406   0000BC                     	ds	8
   407                           
   408                           	psect	cstackCOMRAM
   409   000001                     __pcstackCOMRAM:
   410                           	callstack 0
   411   000001                     gpio_pin_direction_initialize@_pin_config:
   412                           	callstack 0
   413   000001                     gpio_pin_write_logic@_pin_config:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0x0
   417   000001                     	ds	2
   418   000003                     ??_gpio_pin_direction_initialize:
   419   000003                     gpio_pin_write_logic@logic:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0x2
   423   000003                     	ds	1
   424   000004                     ??_gpio_pin_write_logic:
   425                           
   426                           ; 1 bytes @ 0x3
   427   000004                     	ds	5
   428   000009                     gpio_pin_direction_initialize@ret:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x8
   432   000009                     	ds	1
   433   00000A                     gpio_pin_write_logic@ret:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0x9
   437   00000A                     	ds	1
   438   00000B                     gpio_pin_initialize@_pin_config:
   439                           	callstack 0
   440   00000B                     lcd_send_4bit@lcd:
   441                           	callstack 0
   442   00000B                     lcd_send_8bit_en@lcd:
   443                           	callstack 0
   444   00000B                     lcd_send_4bit_en@lcd:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0xA
   448   00000B                     	ds	2
   449   00000D                     ??_gpio_pin_initialize:
   450   00000D                     lcd_send_4bit@data_command:
   451                           	callstack 0
   452   00000D                     lcd_send_8bit_en@ret:
   453                           	callstack 0
   454   00000D                     lcd_send_4bit_en@ret:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0xC
   458   00000D                     	ds	1
   459   00000E                     gpio_pin_initialize@ret:
   460                           	callstack 0
   461   00000E                     lcd_send_4bit@ret:
   462                           	callstack 0
   463   00000E                     lcd_8bit_send_command@lcd:
   464                           	callstack 0
   465   00000E                     lcd_8bit_send_char_data@lcd:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0xD
   469   00000E                     	ds	1
   470   00000F                     lcd_4bit_send_command@lcd:
   471                           	callstack 0
   472   00000F                     lcd_4bit_send_char_data@lcd:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0xE
   476   00000F                     	ds	1
   477   000010                     lcd_8bit_send_command@command:
   478                           	callstack 0
   479   000010                     lcd_8bit_send_char_data@data:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0xF
   483   000010                     	ds	1
   484   000011                     ??_lcd_8bit_send_command:
   485   000011                     ??_lcd_8bit_send_char_data:
   486   000011                     lcd_4bit_send_command@command:
   487                           	callstack 0
   488   000011                     lcd_4bit_send_char_data@data:
   489                           	callstack 0
   490                           
   491                           ; 1 bytes @ 0x10
   492   000011                     	ds	1
   493   000012                     lcd_4bit_send_command@ret:
   494                           	callstack 0
   495   000012                     lcd_4bit_send_char_data@ret:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0x11
   499   000012                     	ds	1
   500   000013                     lcd_4bit_set_cursor@lcd:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x12
   504   000013                     	ds	2
   505   000015                     lcd_8bit_send_command@ret:
   506                           	callstack 0
   507   000015                     lcd_8bit_send_char_data@ret:
   508                           	callstack 0
   509   000015                     lcd_4bit_set_cursor@row:
   510                           	callstack 0
   511                           
   512                           ; 1 bytes @ 0x14
   513   000015                     	ds	1
   514   000016                     lcd_8bit_send_command@pin_counter:
   515                           	callstack 0
   516   000016                     lcd_8bit_send_char_data@pin_counter:
   517                           	callstack 0
   518   000016                     lcd_4bit_set_cursor@columns:
   519                           	callstack 0
   520                           
   521                           ; 1 bytes @ 0x15
   522   000016                     	ds	1
   523   000017                     ??_lcd_4bit_set_cursor:
   524   000017                     lcd_8bit_set_cursor@lcd:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x16
   528   000017                     	ds	2
   529   000019                     lcd_8bit_set_cursor@row:
   530                           	callstack 0
   531   000019                     lcd_4bit_set_cursor@ret:
   532                           	callstack 0
   533                           
   534                           ; 1 bytes @ 0x18
   535   000019                     	ds	1
   536   00001A                     lcd_8bit_set_cursor@column:
   537                           	callstack 0
   538   00001A                     lcd_4bit_send_string_pos@lcd:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x19
   542   00001A                     	ds	1
   543   00001B                     ??_lcd_8bit_set_cursor:
   544                           
   545                           ; 1 bytes @ 0x1A
   546   00001B                     	ds	1
   547   00001C                     lcd_4bit_send_string_pos@row:
   548                           	callstack 0
   549                           
   550                           ; 1 bytes @ 0x1B
   551   00001C                     	ds	1
   552   00001D                     lcd_4bit_send_string_pos@column:
   553                           	callstack 0
   554   00001D                     lcd_8bit_set_cursor@ret:
   555                           	callstack 0
   556                           
   557                           ; 1 bytes @ 0x1C
   558   00001D                     	ds	1
   559   00001E                     lcd_4bit_send_string_pos@str:
   560                           	callstack 0
   561   00001E                     lcd_8bit_send_char_data_pos@lcd:
   562                           	callstack 0
   563   00001E                     lcd_8bit_send_string_pos@lcd:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x1D
   567   00001E                     	ds	2
   568   000020                     ??_lcd_4bit_send_string_pos:
   569   000020                     lcd_8bit_send_char_data_pos@row:
   570                           	callstack 0
   571   000020                     lcd_8bit_send_string_pos@row:
   572                           	callstack 0
   573                           
   574                           ; 1 bytes @ 0x1F
   575   000020                     	ds	1
   576   000021                     lcd_8bit_send_char_data_pos@column:
   577                           	callstack 0
   578   000021                     lcd_8bit_send_string_pos@column:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0x20
   582   000021                     	ds	1
   583   000022                     lcd_4bit_send_string_pos@ret:
   584                           	callstack 0
   585   000022                     lcd_8bit_send_char_data_pos@data:
   586                           	callstack 0
   587   000022                     lcd_8bit_send_string_pos@str:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x21
   591   000022                     	ds	1
   592   000023                     lcd_8bit_send_char_data_pos@ret:
   593                           	callstack 0
   594   000023                     lcd_4bit_send_string_pos@string_counter:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x22
   598   000023                     	ds	1
   599   000024                     ??_lcd_8bit_send_string_pos:
   600   000024                     lcd_8bit_send_custom_char@lcd:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x23
   604   000024                     	ds	1
   605   000025                     lcd_4bit_initialize@lcd:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x24
   609   000025                     	ds	1
   610   000026                     lcd_8bit_send_string_pos@ret:
   611                           	callstack 0
   612   000026                     lcd_8bit_send_custom_char@row:
   613                           	callstack 0
   614                           
   615                           ; 1 bytes @ 0x25
   616   000026                     	ds	1
   617   000027                     ??_lcd_4bit_initialize:
   618   000027                     lcd_8bit_send_custom_char@column:
   619                           	callstack 0
   620   000027                     lcd_8bit_send_string_pos@string_counter:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x26
   624   000027                     	ds	1
   625   000028                     lcd_8bit_send_custom_char@chr:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x27
   629   000028                     	ds	1
   630   000029                     lcd_4bit_initialize@counter:
   631                           	callstack 0
   632   000029                     lcd_8bit_initialize@lcd:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x28
   636   000029                     	ds	1
   637   00002A                     lcd_8bit_send_custom_char@mem_pos:
   638                           	callstack 0
   639                           
   640                           ; 1 bytes @ 0x29
   641   00002A                     	ds	1
   642   00002B                     ??_lcd_8bit_initialize:
   643   00002B                     lcd_4bit_initialize@ret:
   644                           	callstack 0
   645   00002B                     lcd_8bit_send_custom_char@ret:
   646                           	callstack 0
   647                           
   648                           ; 1 bytes @ 0x2A
   649   00002B                     	ds	1
   650   00002C                     lcd_8bit_send_custom_char@data_counter:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x2B
   654   00002C                     	ds	1
   655   00002D                     lcd_8bit_initialize@counter:
   656                           	callstack 0
   657                           
   658                           ; 1 bytes @ 0x2C
   659   00002D                     	ds	1
   660   00002E                     lcd_8bit_initialize@ret:
   661                           	callstack 0
   662                           
   663                           ; 1 bytes @ 0x2D
   664   00002E                     	ds	1
   665   00002F                     ??_main:
   666                           
   667                           ; 1 bytes @ 0x2E
   668   00002F                     	ds	1
   669   000030                     main@customChar1:
   670                           	callstack 0
   671                           
   672                           ; 8 bytes @ 0x2F
   673   000030                     	ds	8
   674   000038                     main@customChar2:
   675                           	callstack 0
   676                           
   677                           ; 8 bytes @ 0x37
   678   000038                     	ds	8
   679   000040                     main@customChar3:
   680                           	callstack 0
   681                           
   682                           ; 8 bytes @ 0x3F
   683   000040                     	ds	8
   684   000048                     main@customChar4:
   685                           	callstack 0
   686                           
   687                           ; 8 bytes @ 0x47
   688   000048                     	ds	8
   689   000050                     main@customChar5:
   690                           	callstack 0
   691                           
   692                           ; 8 bytes @ 0x4F
   693   000050                     	ds	8
   694   000058                     main@customChar6:
   695                           	callstack 0
   696                           
   697                           ; 8 bytes @ 0x57
   698   000058                     	ds	8
   699                           
   700 ;;
   701 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   702 ;;
   703 ;; *************** function _main *****************
   704 ;; Defined at:
   705 ;;		line 13 in file "application.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;		None
   708 ;; Auto vars:     Size  Location     Type
   709 ;;  customChar6     8   87[COMRAM] unsigned char [8]
   710 ;;  customChar5     8   79[COMRAM] unsigned char [8]
   711 ;;  customChar4     8   71[COMRAM] unsigned char [8]
   712 ;;  customChar3     8   63[COMRAM] unsigned char [8]
   713 ;;  customChar2     8   55[COMRAM] unsigned char [8]
   714 ;;  customChar1     8   47[COMRAM] unsigned char [8]
   715 ;;  counter_text    4    0        unsigned char [4]
   716 ;;  counter         1    0        unsigned char 
   717 ;; Return value:  Size  Location     Type
   718 ;;                  2  171[None  ] int 
   719 ;; Registers used:
   720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   727 ;;      Locals:        48       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   728 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   729 ;;      Totals:        49       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   730 ;;Total ram usage:       49 bytes
   731 ;; Hardware stack levels required when called: 8
   732 ;; This function calls:
   733 ;;		_application_initialize
   734 ;;		_lcd_8bit_send_custom_char
   735 ;; This function is called by:
   736 ;;		Startup code after reset
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           	psect	text0
   741   0011E4                     __ptext0:
   742                           	callstack 0
   743   0011E4                     _main:
   744                           	callstack 23
   745   0011E4                     
   746                           ;application.c: 16:     application_initialize();
   747   0011E4  EC7D  F00F         	call	_application_initialize	;wreg free
   748   0011E8                     
   749                           ;application.c: 18:     uint8_t customChar1[] = {0x0E,0x0A,0x1B,0x11,0x11,0x11,0x1F,0x00
      +                          };
   750   0011E8  EE20  F0BC         	lfsr	2,main@F3164
   751   0011EC  EE10  F030         	lfsr	1,main@customChar1
   752   0011F0  0E07               	movlw	7
   753   0011F2                     u1421:
   754   0011F2  CFDB FFE3          	movff	plusw2,plusw1
   755   0011F6  06E8               	decf	wreg,f,c
   756   0011F8  E2FC               	bc	u1421
   757   0011FA                     
   758                           ;application.c: 19:     uint8_t customChar2[] = {0x0E,0x0A,0x1B,0x11,0x11,0x1F,0x1F,0x00
      +                          };
   759   0011FA  EE20  F0B4         	lfsr	2,main@F3166
   760   0011FE  EE10  F038         	lfsr	1,main@customChar2
   761   001202  0E07               	movlw	7
   762   001204                     u1431:
   763   001204  CFDB FFE3          	movff	plusw2,plusw1
   764   001208  06E8               	decf	wreg,f,c
   765   00120A  E2FC               	bc	u1431
   766   00120C                     
   767                           ;application.c: 20:     uint8_t customChar3[] = {0x0E,0x0A,0x1B,0x11,0x1F,0x1F,0x1F,0x00
      +                          };
   768   00120C  EE20  F0AC         	lfsr	2,main@F3168
   769   001210  EE10  F040         	lfsr	1,main@customChar3
   770   001214  0E07               	movlw	7
   771   001216                     u1441:
   772   001216  CFDB FFE3          	movff	plusw2,plusw1
   773   00121A  06E8               	decf	wreg,f,c
   774   00121C  E2FC               	bc	u1441
   775   00121E                     
   776                           ;application.c: 21:     uint8_t customChar4[] = {0x0E,0x0A,0x1B,0x1F,0x1F,0x1F,0x1F,0x00
      +                          };
   777   00121E  EE20  F0A4         	lfsr	2,main@F3170
   778   001222  EE10  F048         	lfsr	1,main@customChar4
   779   001226  0E07               	movlw	7
   780   001228                     u1451:
   781   001228  CFDB FFE3          	movff	plusw2,plusw1
   782   00122C  06E8               	decf	wreg,f,c
   783   00122E  E2FC               	bc	u1451
   784   001230                     
   785                           ;application.c: 22:     uint8_t customChar5[] = {0x0E,0x0A,0x1F,0x1F,0x1F,0x1F,0x1F,0x00
      +                          };
   786   001230  EE20  F09C         	lfsr	2,main@F3172
   787   001234  EE10  F050         	lfsr	1,main@customChar5
   788   001238  0E07               	movlw	7
   789   00123A                     u1461:
   790   00123A  CFDB FFE3          	movff	plusw2,plusw1
   791   00123E  06E8               	decf	wreg,f,c
   792   001240  E2FC               	bc	u1461
   793   001242                     
   794                           ;application.c: 23:     uint8_t customChar6[] = {0x0E,0x0E,0x1F,0x1F,0x1F,0x1F,0x1F,0x00
      +                          };
   795   001242  EE20  F094         	lfsr	2,main@F3174
   796   001246  EE10  F058         	lfsr	1,main@customChar6
   797   00124A  0E07               	movlw	7
   798   00124C                     u1471:
   799   00124C  CFDB FFE3          	movff	plusw2,plusw1
   800   001250  06E8               	decf	wreg,f,c
   801   001252  E2FC               	bc	u1471
   802   001254                     l2581:
   803                           
   804                           ;application.c: 36:        ret = lcd_8bit_send_custom_char (&lcd8bit , 1 , 1 ,customChar
      +                          1 , 0);
   805   001254  0E6A               	movlw	low _lcd8bit
   806   001256  6E24               	movwf	lcd_8bit_send_custom_char@lcd^0,c
   807   001258  0E00               	movlw	high _lcd8bit
   808   00125A  6E25               	movwf	(lcd_8bit_send_custom_char@lcd+1)^0,c
   809   00125C  0E01               	movlw	1
   810   00125E  6E26               	movwf	lcd_8bit_send_custom_char@row^0,c
   811   001260  0E01               	movlw	1
   812   001262  6E27               	movwf	lcd_8bit_send_custom_char@column^0,c
   813   001264  0E30               	movlw	low main@customChar1
   814   001266  6E28               	movwf	lcd_8bit_send_custom_char@chr^0,c
   815   001268  0E00               	movlw	high main@customChar1
   816   00126A  6E29               	movwf	(lcd_8bit_send_custom_char@chr+1)^0,c
   817   00126C  0E00               	movlw	0
   818   00126E  6E2A               	movwf	lcd_8bit_send_custom_char@mem_pos^0,c
   819   001270  EC0E  F00D         	call	_lcd_8bit_send_custom_char	;wreg free
   820   001274  6E7E               	movwf	_ret^0,c
   821   001276                     
   822                           ;application.c: 37:        _delay((unsigned long)((50)*(8000000UL/4000.0)));
   823   001276  0E82               	movlw	130
   824   001278  6E2F               	movwf	??_main^0,c
   825   00127A  0EDE               	movlw	222
   826   00127C                     u1767:
   827   00127C  2EE8               	decfsz	wreg,f,c
   828   00127E  D7FE               	bra	u1767
   829   001280  2E2F               	decfsz	??_main^0,f,c
   830   001282  D7FC               	bra	u1767
   831   001284                     
   832                           ;application.c: 38:        ret = lcd_8bit_send_custom_char (&lcd8bit , 1 , 1 ,customChar
      +                          2 , 0);
   833   001284  0E6A               	movlw	low _lcd8bit
   834   001286  6E24               	movwf	lcd_8bit_send_custom_char@lcd^0,c
   835   001288  0E00               	movlw	high _lcd8bit
   836   00128A  6E25               	movwf	(lcd_8bit_send_custom_char@lcd+1)^0,c
   837   00128C  0E01               	movlw	1
   838   00128E  6E26               	movwf	lcd_8bit_send_custom_char@row^0,c
   839   001290  0E01               	movlw	1
   840   001292  6E27               	movwf	lcd_8bit_send_custom_char@column^0,c
   841   001294  0E38               	movlw	low main@customChar2
   842   001296  6E28               	movwf	lcd_8bit_send_custom_char@chr^0,c
   843   001298  0E00               	movlw	high main@customChar2
   844   00129A  6E29               	movwf	(lcd_8bit_send_custom_char@chr+1)^0,c
   845   00129C  0E00               	movlw	0
   846   00129E  6E2A               	movwf	lcd_8bit_send_custom_char@mem_pos^0,c
   847   0012A0  EC0E  F00D         	call	_lcd_8bit_send_custom_char	;wreg free
   848   0012A4  6E7E               	movwf	_ret^0,c
   849   0012A6                     
   850                           ;application.c: 39:               _delay((unsigned long)((50)*(8000000UL/4000.0)));
   851   0012A6  0E82               	movlw	130
   852   0012A8  6E2F               	movwf	??_main^0,c
   853   0012AA  0EDE               	movlw	222
   854   0012AC                     u1777:
   855   0012AC  2EE8               	decfsz	wreg,f,c
   856   0012AE  D7FE               	bra	u1777
   857   0012B0  2E2F               	decfsz	??_main^0,f,c
   858   0012B2  D7FC               	bra	u1777
   859   0012B4                     
   860                           ;application.c: 40:        ret = lcd_8bit_send_custom_char (&lcd8bit , 1 , 1 ,customChar
      +                          3 , 0);
   861   0012B4  0E6A               	movlw	low _lcd8bit
   862   0012B6  6E24               	movwf	lcd_8bit_send_custom_char@lcd^0,c
   863   0012B8  0E00               	movlw	high _lcd8bit
   864   0012BA  6E25               	movwf	(lcd_8bit_send_custom_char@lcd+1)^0,c
   865   0012BC  0E01               	movlw	1
   866   0012BE  6E26               	movwf	lcd_8bit_send_custom_char@row^0,c
   867   0012C0  0E01               	movlw	1
   868   0012C2  6E27               	movwf	lcd_8bit_send_custom_char@column^0,c
   869   0012C4  0E40               	movlw	low main@customChar3
   870   0012C6  6E28               	movwf	lcd_8bit_send_custom_char@chr^0,c
   871   0012C8  0E00               	movlw	high main@customChar3
   872   0012CA  6E29               	movwf	(lcd_8bit_send_custom_char@chr+1)^0,c
   873   0012CC  0E00               	movlw	0
   874   0012CE  6E2A               	movwf	lcd_8bit_send_custom_char@mem_pos^0,c
   875   0012D0  EC0E  F00D         	call	_lcd_8bit_send_custom_char	;wreg free
   876   0012D4  6E7E               	movwf	_ret^0,c
   877   0012D6                     
   878                           ;application.c: 41:               _delay((unsigned long)((50)*(8000000UL/4000.0)));
   879   0012D6  0E82               	movlw	130
   880   0012D8  6E2F               	movwf	??_main^0,c
   881   0012DA  0EDE               	movlw	222
   882   0012DC                     u1787:
   883   0012DC  2EE8               	decfsz	wreg,f,c
   884   0012DE  D7FE               	bra	u1787
   885   0012E0  2E2F               	decfsz	??_main^0,f,c
   886   0012E2  D7FC               	bra	u1787
   887   0012E4                     
   888                           ;application.c: 42:        ret = lcd_8bit_send_custom_char (&lcd8bit , 1 , 1 ,customChar
      +                          4 , 0);
   889   0012E4  0E6A               	movlw	low _lcd8bit
   890   0012E6  6E24               	movwf	lcd_8bit_send_custom_char@lcd^0,c
   891   0012E8  0E00               	movlw	high _lcd8bit
   892   0012EA  6E25               	movwf	(lcd_8bit_send_custom_char@lcd+1)^0,c
   893   0012EC  0E01               	movlw	1
   894   0012EE  6E26               	movwf	lcd_8bit_send_custom_char@row^0,c
   895   0012F0  0E01               	movlw	1
   896   0012F2  6E27               	movwf	lcd_8bit_send_custom_char@column^0,c
   897   0012F4  0E48               	movlw	low main@customChar4
   898   0012F6  6E28               	movwf	lcd_8bit_send_custom_char@chr^0,c
   899   0012F8  0E00               	movlw	high main@customChar4
   900   0012FA  6E29               	movwf	(lcd_8bit_send_custom_char@chr+1)^0,c
   901   0012FC  0E00               	movlw	0
   902   0012FE  6E2A               	movwf	lcd_8bit_send_custom_char@mem_pos^0,c
   903   001300  EC0E  F00D         	call	_lcd_8bit_send_custom_char	;wreg free
   904   001304  6E7E               	movwf	_ret^0,c
   905   001306                     
   906                           ;application.c: 43:               _delay((unsigned long)((50)*(8000000UL/4000.0)));
   907   001306  0E82               	movlw	130
   908   001308  6E2F               	movwf	??_main^0,c
   909   00130A  0EDE               	movlw	222
   910   00130C                     u1797:
   911   00130C  2EE8               	decfsz	wreg,f,c
   912   00130E  D7FE               	bra	u1797
   913   001310  2E2F               	decfsz	??_main^0,f,c
   914   001312  D7FC               	bra	u1797
   915   001314                     
   916                           ;application.c: 44:        ret = lcd_8bit_send_custom_char (&lcd8bit , 1 , 1 ,customChar
      +                          5 , 0);
   917   001314  0E6A               	movlw	low _lcd8bit
   918   001316  6E24               	movwf	lcd_8bit_send_custom_char@lcd^0,c
   919   001318  0E00               	movlw	high _lcd8bit
   920   00131A  6E25               	movwf	(lcd_8bit_send_custom_char@lcd+1)^0,c
   921   00131C  0E01               	movlw	1
   922   00131E  6E26               	movwf	lcd_8bit_send_custom_char@row^0,c
   923   001320  0E01               	movlw	1
   924   001322  6E27               	movwf	lcd_8bit_send_custom_char@column^0,c
   925   001324  0E50               	movlw	low main@customChar5
   926   001326  6E28               	movwf	lcd_8bit_send_custom_char@chr^0,c
   927   001328  0E00               	movlw	high main@customChar5
   928   00132A  6E29               	movwf	(lcd_8bit_send_custom_char@chr+1)^0,c
   929   00132C  0E00               	movlw	0
   930   00132E  6E2A               	movwf	lcd_8bit_send_custom_char@mem_pos^0,c
   931   001330  EC0E  F00D         	call	_lcd_8bit_send_custom_char	;wreg free
   932   001334  6E7E               	movwf	_ret^0,c
   933   001336                     
   934                           ;application.c: 45:               _delay((unsigned long)((50)*(8000000UL/4000.0)));
   935   001336  0E82               	movlw	130
   936   001338  6E2F               	movwf	??_main^0,c
   937   00133A  0EDE               	movlw	222
   938   00133C                     u1807:
   939   00133C  2EE8               	decfsz	wreg,f,c
   940   00133E  D7FE               	bra	u1807
   941   001340  2E2F               	decfsz	??_main^0,f,c
   942   001342  D7FC               	bra	u1807
   943   001344                     
   944                           ;application.c: 46:        ret = lcd_8bit_send_custom_char (&lcd8bit , 1 , 1 ,customChar
      +                          6 , 0);
   945   001344  0E6A               	movlw	low _lcd8bit
   946   001346  6E24               	movwf	lcd_8bit_send_custom_char@lcd^0,c
   947   001348  0E00               	movlw	high _lcd8bit
   948   00134A  6E25               	movwf	(lcd_8bit_send_custom_char@lcd+1)^0,c
   949   00134C  0E01               	movlw	1
   950   00134E  6E26               	movwf	lcd_8bit_send_custom_char@row^0,c
   951   001350  0E01               	movlw	1
   952   001352  6E27               	movwf	lcd_8bit_send_custom_char@column^0,c
   953   001354  0E58               	movlw	low main@customChar6
   954   001356  6E28               	movwf	lcd_8bit_send_custom_char@chr^0,c
   955   001358  0E00               	movlw	high main@customChar6
   956   00135A  6E29               	movwf	(lcd_8bit_send_custom_char@chr+1)^0,c
   957   00135C  0E00               	movlw	0
   958   00135E  6E2A               	movwf	lcd_8bit_send_custom_char@mem_pos^0,c
   959   001360  EC0E  F00D         	call	_lcd_8bit_send_custom_char	;wreg free
   960   001364  6E7E               	movwf	_ret^0,c
   961   001366                     
   962                           ;application.c: 47:               _delay((unsigned long)((50)*(8000000UL/4000.0)));
   963   001366  0E82               	movlw	130
   964   001368  6E2F               	movwf	??_main^0,c
   965   00136A  0EDE               	movlw	222
   966   00136C                     u1817:
   967   00136C  2EE8               	decfsz	wreg,f,c
   968   00136E  D7FE               	bra	u1817
   969   001370  2E2F               	decfsz	??_main^0,f,c
   970   001372  D7FC               	bra	u1817
   971   001374  EF2A  F009         	goto	l2581
   972   001378  EF00  F000         	goto	start
   973   00137C                     __end_of_main:
   974                           	callstack 0
   975                           
   976 ;; *************** function _lcd_8bit_send_custom_char *****************
   977 ;; Defined at:
   978 ;;		line 251 in file "ECU_Layer/LCD/ecu_lcd.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;  lcd             2   35[COMRAM] PTR const struct .
   981 ;;		 -> lcd8bit(10), 
   982 ;;  row             1   37[COMRAM] unsigned char 
   983 ;;  column          1   38[COMRAM] unsigned char 
   984 ;;  chr             2   39[COMRAM] PTR const unsigned char 
   985 ;;		 -> main@customChar6(8), main@customChar5(8), main@customChar4(8), main@customChar3(8), 
   986 ;;		 -> main@customChar2(8), main@customChar1(8), 
   987 ;;  mem_pos         1   41[COMRAM] unsigned char 
   988 ;; Auto vars:     Size  Location     Type
   989 ;;  data_counter    2   43[COMRAM] int 
   990 ;;  ret             1   42[COMRAM] unsigned char 
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      unsigned char 
   993 ;; Registers used:
   994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1000 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1001 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1003 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1004 ;;Total ram usage:       10 bytes
  1005 ;; Hardware stack levels used: 1
  1006 ;; Hardware stack levels required when called: 5
  1007 ;; This function calls:
  1008 ;;		_lcd_8bit_send_char_data
  1009 ;;		_lcd_8bit_send_char_data_pos
  1010 ;;		_lcd_8bit_send_command
  1011 ;; This function is called by:
  1012 ;;		_main
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           	psect	text1
  1017   001A1C                     __ptext1:
  1018                           	callstack 0
  1019   001A1C                     _lcd_8bit_send_custom_char:
  1020                           	callstack 25
  1021   001A1C                     
  1022                           ;ECU_Layer/LCD/ecu_lcd.c: 255:     if (((void*)0) == lcd ) {
  1023   001A1C  5024               	movf	lcd_8bit_send_custom_char@lcd^0,w,c
  1024   001A1E  1025               	iorwf	(lcd_8bit_send_custom_char@lcd+1)^0,w,c
  1025   001A20  A4D8               	btfss	status,2,c
  1026   001A22  EF15  F00D         	goto	u1291
  1027   001A26  EF17  F00D         	goto	u1290
  1028   001A2A                     u1291:
  1029   001A2A  EF1B  F00D         	goto	l2455
  1030   001A2E                     u1290:
  1031   001A2E                     
  1032                           ;ECU_Layer/LCD/ecu_lcd.c: 256:         ret = (Std_ReturnType)0x00;
  1033   001A2E  0E00               	movlw	0
  1034   001A30  6E2B               	movwf	lcd_8bit_send_custom_char@ret^0,c
  1035                           
  1036                           ;ECU_Layer/LCD/ecu_lcd.c: 257:     }
  1037   001A32  EF55  F00D         	goto	l2471
  1038   001A36                     l2455:
  1039   001A36  C024  F00E         	movff	lcd_8bit_send_custom_char@lcd,lcd_8bit_send_command@lcd
  1040   001A3A  C025  F00F         	movff	lcd_8bit_send_custom_char@lcd+1,lcd_8bit_send_command@lcd+1
  1041   001A3E  502A               	movf	lcd_8bit_send_custom_char@mem_pos^0,w,c
  1042   001A40  0D08               	mullw	8
  1043   001A42  50F3               	movf	243,w,c
  1044   001A44  0F40               	addlw	64
  1045   001A46  6E10               	movwf	lcd_8bit_send_command@command^0,c
  1046   001A48  EC57  F00D         	call	_lcd_8bit_send_command	;wreg free
  1047   001A4C                     
  1048                           ;ECU_Layer/LCD/ecu_lcd.c: 260:         for (int data_counter = 0 ; data_counter <=7 ; da
      +                          ta_counter++){
  1049   001A4C  0E00               	movlw	0
  1050   001A4E  6E2D               	movwf	(lcd_8bit_send_custom_char@data_counter+1)^0,c
  1051   001A50  0E00               	movlw	0
  1052   001A52  6E2C               	movwf	lcd_8bit_send_custom_char@data_counter^0,c
  1053   001A54                     l2463:
  1054   001A54  C024  F00E         	movff	lcd_8bit_send_custom_char@lcd,lcd_8bit_send_char_data@lcd
  1055   001A58  C025  F00F         	movff	lcd_8bit_send_custom_char@lcd+1,lcd_8bit_send_char_data@lcd+1
  1056   001A5C  502C               	movf	lcd_8bit_send_custom_char@data_counter^0,w,c
  1057   001A5E  2428               	addwf	lcd_8bit_send_custom_char@chr^0,w,c
  1058   001A60  6ED9               	movwf	fsr2l,c
  1059   001A62  502D               	movf	(lcd_8bit_send_custom_char@data_counter+1)^0,w,c
  1060   001A64  2029               	addwfc	(lcd_8bit_send_custom_char@chr+1)^0,w,c
  1061   001A66  6EDA               	movwf	fsr2h,c
  1062   001A68  50DF               	movf	indf2,w,c
  1063   001A6A  6E10               	movwf	lcd_8bit_send_char_data@data^0,c
  1064   001A6C  EC9D  F00D         	call	_lcd_8bit_send_char_data	;wreg free
  1065   001A70                     
  1066                           ;ECU_Layer/LCD/ecu_lcd.c: 262:         }
  1067   001A70  4A2C               	infsnz	lcd_8bit_send_custom_char@data_counter^0,f,c
  1068   001A72  2A2D               	incf	(lcd_8bit_send_custom_char@data_counter+1)^0,f,c
  1069   001A74  BE2D               	btfsc	(lcd_8bit_send_custom_char@data_counter+1)^0,7,c
  1070   001A76  EF46  F00D         	goto	u1301
  1071   001A7A  502D               	movf	(lcd_8bit_send_custom_char@data_counter+1)^0,w,c
  1072   001A7C  E109               	bnz	u1300
  1073   001A7E  0E08               	movlw	8
  1074   001A80  5C2C               	subwf	lcd_8bit_send_custom_char@data_counter^0,w,c
  1075   001A82  A0D8               	btfss	status,0,c
  1076   001A84  EF46  F00D         	goto	u1301
  1077   001A88  EF48  F00D         	goto	u1300
  1078   001A8C                     u1301:
  1079   001A8C  EF2A  F00D         	goto	l2463
  1080   001A90                     u1300:
  1081   001A90                     
  1082                           ;ECU_Layer/LCD/ecu_lcd.c: 263:         ret = lcd_8bit_send_char_data_pos (lcd , row , co
      +                          lumn , mem_pos);
  1083   001A90  C024  F01E         	movff	lcd_8bit_send_custom_char@lcd,lcd_8bit_send_char_data_pos@lcd
  1084   001A94  C025  F01F         	movff	lcd_8bit_send_custom_char@lcd+1,lcd_8bit_send_char_data_pos@lcd+1
  1085   001A98  C026  F020         	movff	lcd_8bit_send_custom_char@row,lcd_8bit_send_char_data_pos@row
  1086   001A9C  C027  F021         	movff	lcd_8bit_send_custom_char@column,lcd_8bit_send_char_data_pos@column
  1087   001AA0  C02A  F022         	movff	lcd_8bit_send_custom_char@mem_pos,lcd_8bit_send_char_data_pos@data
  1088   001AA4  ECE8  F00E         	call	_lcd_8bit_send_char_data_pos	;wreg free
  1089   001AA8  6E2B               	movwf	lcd_8bit_send_custom_char@ret^0,c
  1090   001AAA                     l2471:
  1091                           
  1092                           ;ECU_Layer/LCD/ecu_lcd.c: 265:     return ret ;
  1093   001AAA  502B               	movf	lcd_8bit_send_custom_char@ret^0,w,c
  1094   001AAC  0012               	return		;funcret
  1095   001AAE                     __end_of_lcd_8bit_send_custom_char:
  1096                           	callstack 0
  1097                           
  1098 ;; *************** function _lcd_8bit_send_char_data_pos *****************
  1099 ;; Defined at:
  1100 ;;		line 212 in file "ECU_Layer/LCD/ecu_lcd.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;  lcd             2   29[COMRAM] PTR const struct .
  1103 ;;		 -> lcd8bit(10), 
  1104 ;;  row             1   31[COMRAM] unsigned char 
  1105 ;;  column          1   32[COMRAM] unsigned char 
  1106 ;;  data            1   33[COMRAM] unsigned char 
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  ret             1   34[COMRAM] unsigned char 
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      unsigned char 
  1111 ;; Registers used:
  1112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1118 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1119 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1121 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1122 ;;Total ram usage:        6 bytes
  1123 ;; Hardware stack levels used: 1
  1124 ;; Hardware stack levels required when called: 4
  1125 ;; This function calls:
  1126 ;;		_lcd_8bit_send_char_data
  1127 ;;		_lcd_8bit_set_cursor
  1128 ;; This function is called by:
  1129 ;;		_lcd_8bit_send_custom_char
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           	psect	text2
  1134   001DD0                     __ptext2:
  1135                           	callstack 0
  1136   001DD0                     _lcd_8bit_send_char_data_pos:
  1137                           	callstack 25
  1138   001DD0                     
  1139                           ;ECU_Layer/LCD/ecu_lcd.c: 214:     if (((void*)0) == lcd) {
  1140   001DD0  501E               	movf	lcd_8bit_send_char_data_pos@lcd^0,w,c
  1141   001DD2  101F               	iorwf	(lcd_8bit_send_char_data_pos@lcd+1)^0,w,c
  1142   001DD4  A4D8               	btfss	status,2,c
  1143   001DD6  EFEF  F00E         	goto	u1241
  1144   001DDA  EFF1  F00E         	goto	u1240
  1145   001DDE                     u1241:
  1146   001DDE  EFF5  F00E         	goto	l2425
  1147   001DE2                     u1240:
  1148   001DE2                     
  1149                           ;ECU_Layer/LCD/ecu_lcd.c: 215:         ret = (Std_ReturnType)0x00;
  1150   001DE2  0E00               	movlw	0
  1151   001DE4  6E23               	movwf	lcd_8bit_send_char_data_pos@ret^0,c
  1152                           
  1153                           ;ECU_Layer/LCD/ecu_lcd.c: 216:     }
  1154   001DE6  EF09  F00F         	goto	l2427
  1155   001DEA                     l2425:
  1156                           
  1157                           ;ECU_Layer/LCD/ecu_lcd.c: 218:         ret = lcd_8bit_set_cursor (lcd , row , column );
  1158   001DEA  C01E  F017         	movff	lcd_8bit_send_char_data_pos@lcd,lcd_8bit_set_cursor@lcd
  1159   001DEE  C01F  F018         	movff	lcd_8bit_send_char_data_pos@lcd+1,lcd_8bit_set_cursor@lcd+1
  1160   001DF2  C020  F019         	movff	lcd_8bit_send_char_data_pos@row,lcd_8bit_set_cursor@row
  1161   001DF6  C021  F01A         	movff	lcd_8bit_send_char_data_pos@column,lcd_8bit_set_cursor@column
  1162   001DFA  ECC0  F00B         	call	_lcd_8bit_set_cursor	;wreg free
  1163   001DFE  6E23               	movwf	lcd_8bit_send_char_data_pos@ret^0,c
  1164                           
  1165                           ;ECU_Layer/LCD/ecu_lcd.c: 219:         ret = lcd_8bit_send_char_data (lcd ,data);
  1166   001E00  C01E  F00E         	movff	lcd_8bit_send_char_data_pos@lcd,lcd_8bit_send_char_data@lcd
  1167   001E04  C01F  F00F         	movff	lcd_8bit_send_char_data_pos@lcd+1,lcd_8bit_send_char_data@lcd+1
  1168   001E08  C022  F010         	movff	lcd_8bit_send_char_data_pos@data,lcd_8bit_send_char_data@data
  1169   001E0C  EC9D  F00D         	call	_lcd_8bit_send_char_data	;wreg free
  1170   001E10  6E23               	movwf	lcd_8bit_send_char_data_pos@ret^0,c
  1171   001E12                     l2427:
  1172                           
  1173                           ;ECU_Layer/LCD/ecu_lcd.c: 221:     return ret ;
  1174   001E12  5023               	movf	lcd_8bit_send_char_data_pos@ret^0,w,c
  1175   001E14  0012               	return		;funcret
  1176   001E16                     __end_of_lcd_8bit_send_char_data_pos:
  1177                           	callstack 0
  1178                           
  1179 ;; *************** function _application_initialize *****************
  1180 ;; Defined at:
  1181 ;;		line 55 in file "application.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;		None
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;		None
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  1    wreg      void 
  1188 ;; Registers used:
  1189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1199 ;;Total ram usage:        0 bytes
  1200 ;; Hardware stack levels used: 1
  1201 ;; Hardware stack levels required when called: 7
  1202 ;; This function calls:
  1203 ;;		_ecu_layer_intialize
  1204 ;; This function is called by:
  1205 ;;		_main
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text3
  1210   001EFA                     __ptext3:
  1211                           	callstack 0
  1212   001EFA                     _application_initialize:
  1213                           	callstack 23
  1214   001EFA                     
  1215                           ;application.c: 56:     ecu_layer_intialize();
  1216   001EFA  EC70  F00F         	call	_ecu_layer_intialize	;wreg free
  1217   001EFE  0012               	return		;funcret
  1218   001F00                     __end_of_application_initialize:
  1219                           	callstack 0
  1220                           
  1221 ;; *************** function _ecu_layer_intialize *****************
  1222 ;; Defined at:
  1223 ;;		line 122 in file "ECU_Layer/ecu_layer_init.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;		None
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;  ret             1    0        unsigned char 
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  1    wreg      void 
  1230 ;; Registers used:
  1231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;Total ram usage:        0 bytes
  1242 ;; Hardware stack levels used: 1
  1243 ;; Hardware stack levels required when called: 6
  1244 ;; This function calls:
  1245 ;;		_lcd_4bit_initialize
  1246 ;;		_lcd_8bit_initialize
  1247 ;; This function is called by:
  1248 ;;		_application_initialize
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           	psect	text4
  1253   001EE0                     __ptext4:
  1254                           	callstack 0
  1255   001EE0                     _ecu_layer_intialize:
  1256                           	callstack 23
  1257   001EE0  0E74               	movlw	low _lcd4bit
  1258   001EE2  6E25               	movwf	lcd_4bit_initialize@lcd^0,c
  1259   001EE4  0E00               	movlw	high _lcd4bit
  1260   001EE6  6E26               	movwf	(lcd_4bit_initialize@lcd+1)^0,c
  1261   001EE8  EC1F  F008         	call	_lcd_4bit_initialize	;wreg free
  1262   001EEC  0E6A               	movlw	low _lcd8bit
  1263   001EEE  6E29               	movwf	lcd_8bit_initialize@lcd^0,c
  1264   001EF0  0E00               	movlw	high _lcd8bit
  1265   001EF2  6E2A               	movwf	(lcd_8bit_initialize@lcd+1)^0,c
  1266   001EF4  ECBE  F009         	call	_lcd_8bit_initialize	;wreg free
  1267   001EF8  0012               	return		;funcret
  1268   001EFA                     __end_of_ecu_layer_intialize:
  1269                           	callstack 0
  1270                           
  1271 ;; *************** function _lcd_8bit_initialize *****************
  1272 ;; Defined at:
  1273 ;;		line 144 in file "ECU_Layer/LCD/ecu_lcd.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;  lcd             2   40[COMRAM] PTR const struct .
  1276 ;;		 -> lcd8bit(10), 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  counter         1   44[COMRAM] unsigned char 
  1279 ;;  ret             1   45[COMRAM] unsigned char 
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  1    wreg      unsigned char 
  1282 ;; Registers used:
  1283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1289 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1290 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1291 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1292 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1293 ;;Total ram usage:        6 bytes
  1294 ;; Hardware stack levels used: 1
  1295 ;; Hardware stack levels required when called: 5
  1296 ;; This function calls:
  1297 ;;		_gpio_pin_initialize
  1298 ;;		_lcd_8bit_send_command
  1299 ;;		_lcd_8bit_send_string_pos
  1300 ;; This function is called by:
  1301 ;;		_ecu_layer_intialize
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305                           	psect	text5
  1306   00137C                     __ptext5:
  1307                           	callstack 0
  1308   00137C                     _lcd_8bit_initialize:
  1309                           	callstack 23
  1310   00137C                     
  1311                           ;ECU_Layer/LCD/ecu_lcd.c: 146:     if (((void*)0) == lcd ) {
  1312   00137C  5029               	movf	lcd_8bit_initialize@lcd^0,w,c
  1313   00137E  102A               	iorwf	(lcd_8bit_initialize@lcd+1)^0,w,c
  1314   001380  A4D8               	btfss	status,2,c
  1315   001382  EFC5  F009         	goto	u1221
  1316   001386  EFC7  F009         	goto	u1220
  1317   00138A                     u1221:
  1318   00138A  EFCB  F009         	goto	l2365
  1319   00138E                     u1220:
  1320   00138E                     
  1321                           ;ECU_Layer/LCD/ecu_lcd.c: 147:         ret = (Std_ReturnType)0x00;
  1322   00138E  0E00               	movlw	0
  1323   001390  6E2E               	movwf	lcd_8bit_initialize@ret^0,c
  1324                           
  1325                           ;ECU_Layer/LCD/ecu_lcd.c: 148:     }
  1326   001392  EF86  F00A         	goto	l2409
  1327   001396                     l2365:
  1328                           
  1329                           ;ECU_Layer/LCD/ecu_lcd.c: 150:         ret = gpio_pin_initialize (&(lcd->lcd_rs));
  1330   001396  C029  F00B         	movff	lcd_8bit_initialize@lcd,gpio_pin_initialize@_pin_config
  1331   00139A  C02A  F00C         	movff	lcd_8bit_initialize@lcd+1,gpio_pin_initialize@_pin_config+1
  1332   00139E  EC55  F00E         	call	_gpio_pin_initialize	;wreg free
  1333   0013A2  6E2E               	movwf	lcd_8bit_initialize@ret^0,c
  1334                           
  1335                           ;ECU_Layer/LCD/ecu_lcd.c: 151:         ret = gpio_pin_initialize (&(lcd->lcd_en));
  1336   0013A4  0E01               	movlw	1
  1337   0013A6  2429               	addwf	lcd_8bit_initialize@lcd^0,w,c
  1338   0013A8  6E0B               	movwf	gpio_pin_initialize@_pin_config^0,c
  1339   0013AA  0E00               	movlw	0
  1340   0013AC  202A               	addwfc	(lcd_8bit_initialize@lcd+1)^0,w,c
  1341   0013AE  6E0C               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
  1342   0013B0  EC55  F00E         	call	_gpio_pin_initialize	;wreg free
  1343   0013B4  6E2E               	movwf	lcd_8bit_initialize@ret^0,c
  1344   0013B6                     
  1345                           ;ECU_Layer/LCD/ecu_lcd.c: 152:         for (uint8_t counter = 0 ; counter <8 ; counter +
      +                          +){
  1346   0013B6  0E00               	movlw	0
  1347   0013B8  6E2D               	movwf	lcd_8bit_initialize@counter^0,c
  1348   0013BA                     l2373:
  1349   0013BA  502D               	movf	lcd_8bit_initialize@counter^0,w,c
  1350   0013BC  2429               	addwf	lcd_8bit_initialize@lcd^0,w,c
  1351   0013BE  6E2B               	movwf	??_lcd_8bit_initialize^0,c
  1352   0013C0  0E00               	movlw	0
  1353   0013C2  202A               	addwfc	(lcd_8bit_initialize@lcd+1)^0,w,c
  1354   0013C4  6E2C               	movwf	(??_lcd_8bit_initialize+1)^0,c
  1355   0013C6  0E02               	movlw	2
  1356   0013C8  242B               	addwf	??_lcd_8bit_initialize^0,w,c
  1357   0013CA  6E0B               	movwf	gpio_pin_initialize@_pin_config^0,c
  1358   0013CC  0E00               	movlw	0
  1359   0013CE  202C               	addwfc	(??_lcd_8bit_initialize+1)^0,w,c
  1360   0013D0  6E0C               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
  1361   0013D2  EC55  F00E         	call	_gpio_pin_initialize	;wreg free
  1362   0013D6                     
  1363                           ;ECU_Layer/LCD/ecu_lcd.c: 154:     }
  1364   0013D6  2A2D               	incf	lcd_8bit_initialize@counter^0,f,c
  1365   0013D8  0E07               	movlw	7
  1366   0013DA  642D               	cpfsgt	lcd_8bit_initialize@counter^0,c
  1367   0013DC  EFF2  F009         	goto	u1231
  1368   0013E0  EFF4  F009         	goto	u1230
  1369   0013E4                     u1231:
  1370   0013E4  EFDD  F009         	goto	l2373
  1371   0013E8                     u1230:
  1372   0013E8                     
  1373                           ;ECU_Layer/LCD/ecu_lcd.c: 155:         _delay((unsigned long)((20)*(8000000UL/4000.0)));
  1374   0013E8  0E34               	movlw	52
  1375   0013EA  6E2B               	movwf	??_lcd_8bit_initialize^0,c
  1376   0013EC  0EF2               	movlw	242
  1377   0013EE                     u1827:
  1378   0013EE  2EE8               	decfsz	wreg,f,c
  1379   0013F0  D7FE               	bra	u1827
  1380   0013F2  2E2B               	decfsz	??_lcd_8bit_initialize^0,f,c
  1381   0013F4  D7FC               	bra	u1827
  1382   0013F6  C029  F00E         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1383   0013FA  C02A  F00F         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  1384   0013FE  0E38               	movlw	56
  1385   001400  6E10               	movwf	lcd_8bit_send_command@command^0,c
  1386   001402  EC57  F00D         	call	_lcd_8bit_send_command	;wreg free
  1387   001406                     
  1388                           ;ECU_Layer/LCD/ecu_lcd.c: 157:         _delay((unsigned long)((5)*(8000000UL/4000.0)));
  1389   001406  0E0D               	movlw	13
  1390   001408  6E2B               	movwf	??_lcd_8bit_initialize^0,c
  1391   00140A  0EFC               	movlw	252
  1392   00140C                     u1837:
  1393   00140C  2EE8               	decfsz	wreg,f,c
  1394   00140E  D7FE               	bra	u1837
  1395   001410  2E2B               	decfsz	??_lcd_8bit_initialize^0,f,c
  1396   001412  D7FC               	bra	u1837
  1397   001414  C029  F00E         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1398   001418  C02A  F00F         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  1399   00141C  0E38               	movlw	56
  1400   00141E  6E10               	movwf	lcd_8bit_send_command@command^0,c
  1401   001420  EC57  F00D         	call	_lcd_8bit_send_command	;wreg free
  1402   001424                     
  1403                           ;ECU_Layer/LCD/ecu_lcd.c: 159:         _delay((unsigned long)((150)*(8000000UL/4000000.0
      +                          )));
  1404   001424  0E64               	movlw	100
  1405   001426                     u1847:
  1406   001426  2EE8               	decfsz	wreg,f,c
  1407   001428  D7FE               	bra	u1847
  1408   00142A  C029  F00E         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1409   00142E  C02A  F00F         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  1410   001432  0E38               	movlw	56
  1411   001434  6E10               	movwf	lcd_8bit_send_command@command^0,c
  1412   001436  EC57  F00D         	call	_lcd_8bit_send_command	;wreg free
  1413   00143A  C029  F00E         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1414   00143E  C02A  F00F         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  1415   001442  0E01               	movlw	1
  1416   001444  6E10               	movwf	lcd_8bit_send_command@command^0,c
  1417   001446  EC57  F00D         	call	_lcd_8bit_send_command	;wreg free
  1418   00144A  C029  F00E         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1419   00144E  C02A  F00F         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  1420   001452  0E02               	movlw	2
  1421   001454  6E10               	movwf	lcd_8bit_send_command@command^0,c
  1422   001456  EC57  F00D         	call	_lcd_8bit_send_command	;wreg free
  1423   00145A  C029  F00E         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1424   00145E  C02A  F00F         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  1425   001462  0E06               	movlw	6
  1426   001464  6E10               	movwf	lcd_8bit_send_command@command^0,c
  1427   001466  EC57  F00D         	call	_lcd_8bit_send_command	;wreg free
  1428   00146A  C029  F00E         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1429   00146E  C02A  F00F         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  1430   001472  0E0D               	movlw	13
  1431   001474  6E10               	movwf	lcd_8bit_send_command@command^0,c
  1432   001476  EC57  F00D         	call	_lcd_8bit_send_command	;wreg free
  1433   00147A  C029  F00E         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1434   00147E  C02A  F00F         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  1435   001482  0E38               	movlw	56
  1436   001484  6E10               	movwf	lcd_8bit_send_command@command^0,c
  1437   001486  EC57  F00D         	call	_lcd_8bit_send_command	;wreg free
  1438   00148A  C029  F00E         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1439   00148E  C02A  F00F         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  1440   001492  0E80               	movlw	128
  1441   001494  6E10               	movwf	lcd_8bit_send_command@command^0,c
  1442   001496  EC57  F00D         	call	_lcd_8bit_send_command	;wreg free
  1443   00149A  C029  F01E         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_string_pos@lcd
  1444   00149E  C02A  F01F         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_string_pos@lcd+1
  1445   0014A2  0E01               	movlw	1
  1446   0014A4  6E20               	movwf	lcd_8bit_send_string_pos@row^0,c
  1447   0014A6  0E07               	movlw	7
  1448   0014A8  6E21               	movwf	lcd_8bit_send_string_pos@column^0,c
  1449   0014AA  0E27               	movlw	low STR_1
  1450   0014AC  6E22               	movwf	lcd_8bit_send_string_pos@str^0,c
  1451   0014AE  0E10               	movlw	high STR_1
  1452   0014B0  6E23               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1453   0014B2  EC68  F00C         	call	_lcd_8bit_send_string_pos	;wreg free
  1454   0014B6  C029  F01E         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_string_pos@lcd
  1455   0014BA  C02A  F01F         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_string_pos@lcd+1
  1456   0014BE  0E03               	movlw	3
  1457   0014C0  6E20               	movwf	lcd_8bit_send_string_pos@row^0,c
  1458   0014C2  0E04               	movlw	4
  1459   0014C4  6E21               	movwf	lcd_8bit_send_string_pos@column^0,c
  1460   0014C6  0E11               	movlw	low STR_2
  1461   0014C8  6E22               	movwf	lcd_8bit_send_string_pos@str^0,c
  1462   0014CA  0E10               	movlw	high STR_2
  1463   0014CC  6E23               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1464   0014CE  EC68  F00C         	call	_lcd_8bit_send_string_pos	;wreg free
  1465                           
  1466                           ;ECU_Layer/LCD/ecu_lcd.c: 170:         _delay((unsigned long)((2000)*(8000000UL/4000.0))
      +                          );
  1467   0014D2  0E15               	movlw	21
  1468   0014D4  6E2C               	movwf	(??_lcd_8bit_initialize+1)^0,c
  1469   0014D6  0E4B               	movlw	75
  1470   0014D8  6E2B               	movwf	??_lcd_8bit_initialize^0,c
  1471   0014DA  0EBE               	movlw	190
  1472   0014DC                     u1857:
  1473   0014DC  2EE8               	decfsz	wreg,f,c
  1474   0014DE  D7FE               	bra	u1857
  1475   0014E0  2E2B               	decfsz	??_lcd_8bit_initialize^0,f,c
  1476   0014E2  D7FC               	bra	u1857
  1477   0014E4  2E2C               	decfsz	(??_lcd_8bit_initialize+1)^0,f,c
  1478   0014E6  D7FA               	bra	u1857
  1479   0014E8  D000               	nop2	
  1480   0014EA  C029  F00E         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1481   0014EE  C02A  F00F         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  1482   0014F2  0E01               	movlw	1
  1483   0014F4  6E10               	movwf	lcd_8bit_send_command@command^0,c
  1484   0014F6  EC57  F00D         	call	_lcd_8bit_send_command	;wreg free
  1485   0014FA                     
  1486                           ;ECU_Layer/LCD/ecu_lcd.c: 172:         ret = lcd_8bit_send_command(lcd, 0x02);
  1487   0014FA  C029  F00E         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1488   0014FE  C02A  F00F         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  1489   001502  0E02               	movlw	2
  1490   001504  6E10               	movwf	lcd_8bit_send_command@command^0,c
  1491   001506  EC57  F00D         	call	_lcd_8bit_send_command	;wreg free
  1492   00150A  6E2E               	movwf	lcd_8bit_initialize@ret^0,c
  1493   00150C                     l2409:
  1494                           
  1495                           ;ECU_Layer/LCD/ecu_lcd.c: 177:     return ret ;
  1496   00150C  502E               	movf	lcd_8bit_initialize@ret^0,w,c
  1497   00150E  0012               	return		;funcret
  1498   001510                     __end_of_lcd_8bit_initialize:
  1499                           	callstack 0
  1500                           
  1501 ;; *************** function _lcd_8bit_send_string_pos *****************
  1502 ;; Defined at:
  1503 ;;		line 237 in file "ECU_Layer/LCD/ecu_lcd.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;  lcd             2   29[COMRAM] PTR const struct .
  1506 ;;		 -> lcd8bit(10), 
  1507 ;;  row             1   31[COMRAM] unsigned char 
  1508 ;;  column          1   32[COMRAM] unsigned char 
  1509 ;;  str             2   33[COMRAM] PTR unsigned char 
  1510 ;;		 -> STR_9(14), STR_8(8), STR_5(8), STR_4(2), 
  1511 ;;		 -> STR_3(8), STR_2(14), STR_1(8), 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  string_count    2   38[COMRAM] int 
  1514 ;;  ret             1   37[COMRAM] unsigned char 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      unsigned char 
  1517 ;; Registers used:
  1518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1524 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1525 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1526 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1527 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1528 ;;Total ram usage:       11 bytes
  1529 ;; Hardware stack levels used: 1
  1530 ;; Hardware stack levels required when called: 4
  1531 ;; This function calls:
  1532 ;;		_lcd_8bit_send_char_data
  1533 ;;		_lcd_8bit_set_cursor
  1534 ;; This function is called by:
  1535 ;;		_lcd_8bit_initialize
  1536 ;;		_welcome_func
  1537 ;;		_loading_func
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           	psect	text6
  1542   0018D0                     __ptext6:
  1543                           	callstack 0
  1544   0018D0                     _lcd_8bit_send_string_pos:
  1545                           	callstack 23
  1546   0018D0                     
  1547                           ;ECU_Layer/LCD/ecu_lcd.c: 239:     if (((void*)0) == lcd || ((void*)0) == str ) {
  1548   0018D0  501E               	movf	lcd_8bit_send_string_pos@lcd^0,w,c
  1549   0018D2  101F               	iorwf	(lcd_8bit_send_string_pos@lcd+1)^0,w,c
  1550   0018D4  B4D8               	btfsc	status,2,c
  1551   0018D6  EF6F  F00C         	goto	u1141
  1552   0018DA  EF71  F00C         	goto	u1140
  1553   0018DE                     u1141:
  1554   0018DE  EF7A  F00C         	goto	l2267
  1555   0018E2                     u1140:
  1556   0018E2  5022               	movf	lcd_8bit_send_string_pos@str^0,w,c
  1557   0018E4  1023               	iorwf	(lcd_8bit_send_string_pos@str+1)^0,w,c
  1558   0018E6  A4D8               	btfss	status,2,c
  1559   0018E8  EF78  F00C         	goto	u1151
  1560   0018EC  EF7A  F00C         	goto	u1150
  1561   0018F0                     u1151:
  1562   0018F0  EF7E  F00C         	goto	l2269
  1563   0018F4                     u1150:
  1564   0018F4                     l2267:
  1565                           
  1566                           ;ECU_Layer/LCD/ecu_lcd.c: 240:         ret = (Std_ReturnType)0x00;
  1567   0018F4  0E00               	movlw	0
  1568   0018F6  6E26               	movwf	lcd_8bit_send_string_pos@ret^0,c
  1569                           
  1570                           ;ECU_Layer/LCD/ecu_lcd.c: 241:     }
  1571   0018F8  EFB9  F00C         	goto	l2279
  1572   0018FC                     l2269:
  1573                           
  1574                           ;ECU_Layer/LCD/ecu_lcd.c: 243:         ret = lcd_8bit_set_cursor (lcd , row , column);
  1575   0018FC  C01E  F017         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_set_cursor@lcd
  1576   001900  C01F  F018         	movff	lcd_8bit_send_string_pos@lcd+1,lcd_8bit_set_cursor@lcd+1
  1577   001904  C020  F019         	movff	lcd_8bit_send_string_pos@row,lcd_8bit_set_cursor@row
  1578   001908  C021  F01A         	movff	lcd_8bit_send_string_pos@column,lcd_8bit_set_cursor@column
  1579   00190C  ECC0  F00B         	call	_lcd_8bit_set_cursor	;wreg free
  1580   001910  6E26               	movwf	lcd_8bit_send_string_pos@ret^0,c
  1581   001912                     
  1582                           ;ECU_Layer/LCD/ecu_lcd.c: 244:         for (int string_counter = 0 ; str[string_counter]
      +                           != '\0' ; string_counter++ ){
  1583   001912  0E00               	movlw	0
  1584   001914  6E28               	movwf	(lcd_8bit_send_string_pos@string_counter+1)^0,c
  1585   001916  0E00               	movlw	0
  1586   001918  6E27               	movwf	lcd_8bit_send_string_pos@string_counter^0,c
  1587   00191A  EFA5  F00C         	goto	l2277
  1588   00191E                     l2273:
  1589                           
  1590                           ;ECU_Layer/LCD/ecu_lcd.c: 245:                 ret = lcd_8bit_send_char_data (lcd , str[
      +                          string_counter]);
  1591   00191E  C01E  F00E         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_send_char_data@lcd
  1592   001922  C01F  F00F         	movff	lcd_8bit_send_string_pos@lcd+1,lcd_8bit_send_char_data@lcd+1
  1593   001926  5027               	movf	lcd_8bit_send_string_pos@string_counter^0,w,c
  1594   001928  2422               	addwf	lcd_8bit_send_string_pos@str^0,w,c
  1595   00192A  6E24               	movwf	??_lcd_8bit_send_string_pos^0,c
  1596   00192C  5028               	movf	(lcd_8bit_send_string_pos@string_counter+1)^0,w,c
  1597   00192E  2023               	addwfc	(lcd_8bit_send_string_pos@str+1)^0,w,c
  1598   001930  6E25               	movwf	(??_lcd_8bit_send_string_pos+1)^0,c
  1599   001932  C024  FFF6         	movff	??_lcd_8bit_send_string_pos,tblptrl
  1600   001936  C025  FFF7         	movff	??_lcd_8bit_send_string_pos+1,tblptrh
  1601   00193A                     	if	0	;tblptru may be non-zero
  1602   00193A                     	endif
  1603   00193A                     	if	0	;tblptru may be non-zero
  1604   00193A                     	endif
  1605   00193A  0008               	tblrd		*
  1606   00193C  CFF5 F010          	movff	tablat,lcd_8bit_send_char_data@data
  1607   001940  EC9D  F00D         	call	_lcd_8bit_send_char_data	;wreg free
  1608   001944  6E26               	movwf	lcd_8bit_send_string_pos@ret^0,c
  1609   001946                     
  1610                           ;ECU_Layer/LCD/ecu_lcd.c: 246:         }
  1611   001946  4A27               	infsnz	lcd_8bit_send_string_pos@string_counter^0,f,c
  1612   001948  2A28               	incf	(lcd_8bit_send_string_pos@string_counter+1)^0,f,c
  1613   00194A                     l2277:
  1614   00194A  5027               	movf	lcd_8bit_send_string_pos@string_counter^0,w,c
  1615   00194C  2422               	addwf	lcd_8bit_send_string_pos@str^0,w,c
  1616   00194E  6E24               	movwf	??_lcd_8bit_send_string_pos^0,c
  1617   001950  5028               	movf	(lcd_8bit_send_string_pos@string_counter+1)^0,w,c
  1618   001952  2023               	addwfc	(lcd_8bit_send_string_pos@str+1)^0,w,c
  1619   001954  6E25               	movwf	(??_lcd_8bit_send_string_pos+1)^0,c
  1620   001956  C024  FFF6         	movff	??_lcd_8bit_send_string_pos,tblptrl
  1621   00195A  C025  FFF7         	movff	??_lcd_8bit_send_string_pos+1,tblptrh
  1622   00195E                     	if	0	;tblptru may be non-zero
  1623   00195E                     	endif
  1624   00195E                     	if	0	;tblptru may be non-zero
  1625   00195E                     	endif
  1626   00195E  0008               	tblrd		*
  1627   001960  50F5               	movf	tablat,w,c
  1628   001962  0900               	iorlw	0
  1629   001964  A4D8               	btfss	status,2,c
  1630   001966  EFB7  F00C         	goto	u1161
  1631   00196A  EFB9  F00C         	goto	u1160
  1632   00196E                     u1161:
  1633   00196E  EF8F  F00C         	goto	l2273
  1634   001972                     u1160:
  1635   001972                     l2279:
  1636                           
  1637                           ;ECU_Layer/LCD/ecu_lcd.c: 248:     return ret ;
  1638   001972  5026               	movf	lcd_8bit_send_string_pos@ret^0,w,c
  1639   001974  0012               	return		;funcret
  1640   001976                     __end_of_lcd_8bit_send_string_pos:
  1641                           	callstack 0
  1642                           
  1643 ;; *************** function _lcd_8bit_set_cursor *****************
  1644 ;; Defined at:
  1645 ;;		line 333 in file "ECU_Layer/LCD/ecu_lcd.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;  lcd             2   22[COMRAM] PTR const struct .
  1648 ;;		 -> lcd8bit(10), 
  1649 ;;  row             1   24[COMRAM] unsigned char 
  1650 ;;  column          1   25[COMRAM] unsigned char 
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;  ret             1   28[COMRAM] unsigned char 
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      unsigned char 
  1655 ;; Registers used:
  1656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1662 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1663 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1664 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1665 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1666 ;;Total ram usage:        7 bytes
  1667 ;; Hardware stack levels used: 1
  1668 ;; Hardware stack levels required when called: 3
  1669 ;; This function calls:
  1670 ;;		_lcd_8bit_send_command
  1671 ;; This function is called by:
  1672 ;;		_lcd_8bit_send_char_data_pos
  1673 ;;		_lcd_8bit_send_string_pos
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text7
  1678   001780                     __ptext7:
  1679                           	callstack 0
  1680   001780                     _lcd_8bit_set_cursor:
  1681                           	callstack 25
  1682   001780                     
  1683                           ;ECU_Layer/LCD/ecu_lcd.c: 334:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1684   001780  0E01               	movlw	1
  1685   001782  6E1D               	movwf	lcd_8bit_set_cursor@ret^0,c
  1686   001784                     
  1687                           ;ECU_Layer/LCD/ecu_lcd.c: 335:     column --;
  1688   001784  061A               	decf	lcd_8bit_set_cursor@column^0,f,c
  1689                           
  1690                           ;ECU_Layer/LCD/ecu_lcd.c: 336:     switch (row){
  1691   001786  EFF5  F00B         	goto	l2237
  1692   00178A                     l2227:
  1693   00178A  C017  F00E         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1694   00178E  C018  F00F         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
  1695   001792  501A               	movf	lcd_8bit_set_cursor@column^0,w,c
  1696   001794  0F80               	addlw	128
  1697   001796  6E10               	movwf	lcd_8bit_send_command@command^0,c
  1698   001798  EC57  F00D         	call	_lcd_8bit_send_command	;wreg free
  1699   00179C  6E1D               	movwf	lcd_8bit_set_cursor@ret^0,c
  1700   00179E  EF12  F00C         	goto	l2239
  1701   0017A2                     l2229:
  1702   0017A2  C017  F00E         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1703   0017A6  C018  F00F         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
  1704   0017AA  501A               	movf	lcd_8bit_set_cursor@column^0,w,c
  1705   0017AC  0FC0               	addlw	192
  1706   0017AE  6E10               	movwf	lcd_8bit_send_command@command^0,c
  1707   0017B0  EC57  F00D         	call	_lcd_8bit_send_command	;wreg free
  1708   0017B4  6E1D               	movwf	lcd_8bit_set_cursor@ret^0,c
  1709   0017B6  EF12  F00C         	goto	l2239
  1710   0017BA                     l2231:
  1711   0017BA  C017  F00E         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1712   0017BE  C018  F00F         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
  1713   0017C2  501A               	movf	lcd_8bit_set_cursor@column^0,w,c
  1714   0017C4  0F94               	addlw	148
  1715   0017C6  6E10               	movwf	lcd_8bit_send_command@command^0,c
  1716   0017C8  EC57  F00D         	call	_lcd_8bit_send_command	;wreg free
  1717   0017CC  6E1D               	movwf	lcd_8bit_set_cursor@ret^0,c
  1718   0017CE  EF12  F00C         	goto	l2239
  1719   0017D2                     l2233:
  1720   0017D2  C017  F00E         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1721   0017D6  C018  F00F         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
  1722   0017DA  501A               	movf	lcd_8bit_set_cursor@column^0,w,c
  1723   0017DC  0FD4               	addlw	212
  1724   0017DE  6E10               	movwf	lcd_8bit_send_command@command^0,c
  1725   0017E0  EC57  F00D         	call	_lcd_8bit_send_command	;wreg free
  1726   0017E4  6E1D               	movwf	lcd_8bit_set_cursor@ret^0,c
  1727   0017E6  EF12  F00C         	goto	l2239
  1728   0017EA                     l2237:
  1729   0017EA  5019               	movf	lcd_8bit_set_cursor@row^0,w,c
  1730   0017EC  6E1B               	movwf	??_lcd_8bit_set_cursor^0,c
  1731   0017EE  6A1C               	clrf	(??_lcd_8bit_set_cursor+1)^0,c
  1732                           
  1733                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1734                           ; Switch size 1, requested type "simple"
  1735                           ; Number of cases is 1, Range of values is 0 to 0
  1736                           ; switch strategies available:
  1737                           ; Name         Instructions Cycles
  1738                           ; simple_byte            4     3 (average)
  1739                           ;	Chosen strategy is simple_byte
  1740   0017F0  501C               	movf	(??_lcd_8bit_set_cursor+1)^0,w,c
  1741   0017F2  0A00               	xorlw	0	; case 0
  1742   0017F4  B4D8               	btfsc	status,2,c
  1743   0017F6  EFFF  F00B         	goto	l2853
  1744   0017FA  EF12  F00C         	goto	l2239
  1745   0017FE                     l2853:
  1746                           
  1747                           ; Switch size 1, requested type "simple"
  1748                           ; Number of cases is 4, Range of values is 1 to 4
  1749                           ; switch strategies available:
  1750                           ; Name         Instructions Cycles
  1751                           ; simple_byte           13     7 (average)
  1752                           ;	Chosen strategy is simple_byte
  1753   0017FE  501B               	movf	??_lcd_8bit_set_cursor^0,w,c
  1754   001800  0A01               	xorlw	1	; case 1
  1755   001802  B4D8               	btfsc	status,2,c
  1756   001804  EFC5  F00B         	goto	l2227
  1757   001808  0A03               	xorlw	3	; case 2
  1758   00180A  B4D8               	btfsc	status,2,c
  1759   00180C  EFD1  F00B         	goto	l2229
  1760   001810  0A01               	xorlw	1	; case 3
  1761   001812  B4D8               	btfsc	status,2,c
  1762   001814  EFDD  F00B         	goto	l2231
  1763   001818  0A07               	xorlw	7	; case 4
  1764   00181A  B4D8               	btfsc	status,2,c
  1765   00181C  EFE9  F00B         	goto	l2233
  1766   001820  EF12  F00C         	goto	l2239
  1767   001824                     l2239:
  1768                           
  1769                           ;ECU_Layer/LCD/ecu_lcd.c: 343:     return ret;
  1770   001824  501D               	movf	lcd_8bit_set_cursor@ret^0,w,c
  1771   001826  0012               	return		;funcret
  1772   001828                     __end_of_lcd_8bit_set_cursor:
  1773                           	callstack 0
  1774                           
  1775 ;; *************** function _lcd_8bit_send_command *****************
  1776 ;; Defined at:
  1777 ;;		line 181 in file "ECU_Layer/LCD/ecu_lcd.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;  lcd             2   13[COMRAM] PTR const struct .
  1780 ;;		 -> lcd8bit(10), 
  1781 ;;  command         1   15[COMRAM] unsigned char 
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;  pin_counter     1   21[COMRAM] unsigned char 
  1784 ;;  ret             1   20[COMRAM] unsigned char 
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  1    wreg      unsigned char 
  1787 ;; Registers used:
  1788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1794 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1795 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1796 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1797 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1798 ;;Total ram usage:        9 bytes
  1799 ;; Hardware stack levels used: 1
  1800 ;; Hardware stack levels required when called: 2
  1801 ;; This function calls:
  1802 ;;		_gpio_pin_write_logic
  1803 ;;		_lcd_send_8bit_en
  1804 ;; This function is called by:
  1805 ;;		_lcd_8bit_initialize
  1806 ;;		_lcd_8bit_send_custom_char
  1807 ;;		_lcd_8bit_set_cursor
  1808 ;;		_welcome_func
  1809 ;;		_loading_func
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           	psect	text8
  1814   001AAE                     __ptext8:
  1815                           	callstack 0
  1816   001AAE                     _lcd_8bit_send_command:
  1817                           	callstack 27
  1818   001AAE                     
  1819                           ;ECU_Layer/LCD/ecu_lcd.c: 183:     if (((void*)0) == lcd ) {
  1820   001AAE  500E               	movf	lcd_8bit_send_command@lcd^0,w,c
  1821   001AB0  100F               	iorwf	(lcd_8bit_send_command@lcd+1)^0,w,c
  1822   001AB2  A4D8               	btfss	status,2,c
  1823   001AB4  EF5E  F00D         	goto	u981
  1824   001AB8  EF60  F00D         	goto	u980
  1825   001ABC                     u981:
  1826   001ABC  EF64  F00D         	goto	l2107
  1827   001AC0                     u980:
  1828   001AC0                     
  1829                           ;ECU_Layer/LCD/ecu_lcd.c: 184:         ret = (Std_ReturnType)0x00;
  1830   001AC0  0E00               	movlw	0
  1831   001AC2  6E15               	movwf	lcd_8bit_send_command@ret^0,c
  1832                           
  1833                           ;ECU_Layer/LCD/ecu_lcd.c: 185:     }
  1834   001AC4  EF9B  F00D         	goto	l2123
  1835   001AC8                     l2107:
  1836   001AC8  C00E  F001         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  1837   001ACC  C00F  F002         	movff	lcd_8bit_send_command@lcd+1,gpio_pin_write_logic@_pin_config+1
  1838   001AD0  0E00               	movlw	0
  1839   001AD2  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1840   001AD4  EC2A  F00B         	call	_gpio_pin_write_logic	;wreg free
  1841   001AD8                     
  1842                           ;ECU_Layer/LCD/ecu_lcd.c: 188:         for (uint8_t pin_counter = 0 ; pin_counter < 8 ; 
      +                          pin_counter++){
  1843   001AD8  0E00               	movlw	0
  1844   001ADA  6E16               	movwf	lcd_8bit_send_command@pin_counter^0,c
  1845   001ADC                     l2115:
  1846   001ADC  5016               	movf	lcd_8bit_send_command@pin_counter^0,w,c
  1847   001ADE  240E               	addwf	lcd_8bit_send_command@lcd^0,w,c
  1848   001AE0  6E11               	movwf	??_lcd_8bit_send_command^0,c
  1849   001AE2  0E00               	movlw	0
  1850   001AE4  200F               	addwfc	(lcd_8bit_send_command@lcd+1)^0,w,c
  1851   001AE6  6E12               	movwf	(??_lcd_8bit_send_command+1)^0,c
  1852   001AE8  0E02               	movlw	2
  1853   001AEA  2411               	addwf	??_lcd_8bit_send_command^0,w,c
  1854   001AEC  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1855   001AEE  0E00               	movlw	0
  1856   001AF0  2012               	addwfc	(??_lcd_8bit_send_command+1)^0,w,c
  1857   001AF2  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1858   001AF4  C016  F013         	movff	lcd_8bit_send_command@pin_counter,??_lcd_8bit_send_command+2
  1859   001AF8  C010  F014         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+3
  1860   001AFC  2A13               	incf	(??_lcd_8bit_send_command+2)^0,f,c
  1861   001AFE  EF83  F00D         	goto	u994
  1862   001B02                     u995:
  1863   001B02  90D8               	bcf	status,0,c
  1864   001B04  3214               	rrcf	(??_lcd_8bit_send_command+3)^0,f,c
  1865   001B06                     u994:
  1866   001B06  2E13               	decfsz	(??_lcd_8bit_send_command+2)^0,f,c
  1867   001B08  EF81  F00D         	goto	u995
  1868   001B0C  5014               	movf	(??_lcd_8bit_send_command+3)^0,w,c
  1869   001B0E  0B01               	andlw	1
  1870   001B10  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1871   001B12  EC2A  F00B         	call	_gpio_pin_write_logic	;wreg free
  1872   001B16                     
  1873                           ;ECU_Layer/LCD/ecu_lcd.c: 191:         }
  1874   001B16  2A16               	incf	lcd_8bit_send_command@pin_counter^0,f,c
  1875   001B18  0E07               	movlw	7
  1876   001B1A  6416               	cpfsgt	lcd_8bit_send_command@pin_counter^0,c
  1877   001B1C  EF92  F00D         	goto	u1001
  1878   001B20  EF94  F00D         	goto	u1000
  1879   001B24                     u1001:
  1880   001B24  EF6E  F00D         	goto	l2115
  1881   001B28                     u1000:
  1882   001B28                     
  1883                           ;ECU_Layer/LCD/ecu_lcd.c: 192:         ret = lcd_send_8bit_en (lcd);
  1884   001B28  C00E  F00B         	movff	lcd_8bit_send_command@lcd,lcd_send_8bit_en@lcd
  1885   001B2C  C00F  F00C         	movff	lcd_8bit_send_command@lcd+1,lcd_send_8bit_en@lcd+1
  1886   001B30  EC2D  F00F         	call	_lcd_send_8bit_en	;wreg free
  1887   001B34  6E15               	movwf	lcd_8bit_send_command@ret^0,c
  1888   001B36                     l2123:
  1889                           
  1890                           ;ECU_Layer/LCD/ecu_lcd.c: 194:     return ret ;
  1891   001B36  5015               	movf	lcd_8bit_send_command@ret^0,w,c
  1892   001B38  0012               	return		;funcret
  1893   001B3A                     __end_of_lcd_8bit_send_command:
  1894                           	callstack 0
  1895                           
  1896 ;; *************** function _lcd_8bit_send_char_data *****************
  1897 ;; Defined at:
  1898 ;;		line 197 in file "ECU_Layer/LCD/ecu_lcd.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;  lcd             2   13[COMRAM] PTR const struct .
  1901 ;;		 -> lcd8bit(10), 
  1902 ;;  data            1   15[COMRAM] unsigned char 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  pin_counter     1   21[COMRAM] unsigned char 
  1905 ;;  ret             1   20[COMRAM] unsigned char 
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      unsigned char 
  1908 ;; Registers used:
  1909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1915 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1916 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1918 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1919 ;;Total ram usage:        9 bytes
  1920 ;; Hardware stack levels used: 1
  1921 ;; Hardware stack levels required when called: 2
  1922 ;; This function calls:
  1923 ;;		_gpio_pin_write_logic
  1924 ;;		_lcd_send_8bit_en
  1925 ;; This function is called by:
  1926 ;;		_lcd_8bit_send_char_data_pos
  1927 ;;		_lcd_8bit_send_string_pos
  1928 ;;		_lcd_8bit_send_custom_char
  1929 ;;		_lcd_8bit_send_string
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text9
  1934   001B3A                     __ptext9:
  1935                           	callstack 0
  1936   001B3A                     _lcd_8bit_send_char_data:
  1937                           	callstack 26
  1938   001B3A                     
  1939                           ;ECU_Layer/LCD/ecu_lcd.c: 199:     if (((void*)0) == lcd ) {
  1940   001B3A  500E               	movf	lcd_8bit_send_char_data@lcd^0,w,c
  1941   001B3C  100F               	iorwf	(lcd_8bit_send_char_data@lcd+1)^0,w,c
  1942   001B3E  A4D8               	btfss	status,2,c
  1943   001B40  EFA4  F00D         	goto	u1091
  1944   001B44  EFA6  F00D         	goto	u1090
  1945   001B48                     u1091:
  1946   001B48  EFAA  F00D         	goto	l2203
  1947   001B4C                     u1090:
  1948   001B4C                     
  1949                           ;ECU_Layer/LCD/ecu_lcd.c: 200:         ret = (Std_ReturnType)0x00;
  1950   001B4C  0E00               	movlw	0
  1951   001B4E  6E15               	movwf	lcd_8bit_send_char_data@ret^0,c
  1952                           
  1953                           ;ECU_Layer/LCD/ecu_lcd.c: 201:     }
  1954   001B50  EFE1  F00D         	goto	l2219
  1955   001B54                     l2203:
  1956   001B54  C00E  F001         	movff	lcd_8bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  1957   001B58  C00F  F002         	movff	lcd_8bit_send_char_data@lcd+1,gpio_pin_write_logic@_pin_config+1
  1958   001B5C  0E01               	movlw	1
  1959   001B5E  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1960   001B60  EC2A  F00B         	call	_gpio_pin_write_logic	;wreg free
  1961   001B64                     
  1962                           ;ECU_Layer/LCD/ecu_lcd.c: 204:         for (uint8_t pin_counter = 0 ; pin_counter < 8 ; 
      +                          pin_counter++){
  1963   001B64  0E00               	movlw	0
  1964   001B66  6E16               	movwf	lcd_8bit_send_char_data@pin_counter^0,c
  1965   001B68                     l2211:
  1966   001B68  5016               	movf	lcd_8bit_send_char_data@pin_counter^0,w,c
  1967   001B6A  240E               	addwf	lcd_8bit_send_char_data@lcd^0,w,c
  1968   001B6C  6E11               	movwf	??_lcd_8bit_send_char_data^0,c
  1969   001B6E  0E00               	movlw	0
  1970   001B70  200F               	addwfc	(lcd_8bit_send_char_data@lcd+1)^0,w,c
  1971   001B72  6E12               	movwf	(??_lcd_8bit_send_char_data+1)^0,c
  1972   001B74  0E02               	movlw	2
  1973   001B76  2411               	addwf	??_lcd_8bit_send_char_data^0,w,c
  1974   001B78  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1975   001B7A  0E00               	movlw	0
  1976   001B7C  2012               	addwfc	(??_lcd_8bit_send_char_data+1)^0,w,c
  1977   001B7E  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1978   001B80  C016  F013         	movff	lcd_8bit_send_char_data@pin_counter,??_lcd_8bit_send_char_data+2
  1979   001B84  C010  F014         	movff	lcd_8bit_send_char_data@data,??_lcd_8bit_send_char_data+3
  1980   001B88  2A13               	incf	(??_lcd_8bit_send_char_data+2)^0,f,c
  1981   001B8A  EFC9  F00D         	goto	u1104
  1982   001B8E                     u1105:
  1983   001B8E  90D8               	bcf	status,0,c
  1984   001B90  3214               	rrcf	(??_lcd_8bit_send_char_data+3)^0,f,c
  1985   001B92                     u1104:
  1986   001B92  2E13               	decfsz	(??_lcd_8bit_send_char_data+2)^0,f,c
  1987   001B94  EFC7  F00D         	goto	u1105
  1988   001B98  5014               	movf	(??_lcd_8bit_send_char_data+3)^0,w,c
  1989   001B9A  0B01               	andlw	1
  1990   001B9C  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1991   001B9E  EC2A  F00B         	call	_gpio_pin_write_logic	;wreg free
  1992   001BA2                     
  1993                           ;ECU_Layer/LCD/ecu_lcd.c: 206:         }
  1994   001BA2  2A16               	incf	lcd_8bit_send_char_data@pin_counter^0,f,c
  1995   001BA4  0E07               	movlw	7
  1996   001BA6  6416               	cpfsgt	lcd_8bit_send_char_data@pin_counter^0,c
  1997   001BA8  EFD8  F00D         	goto	u1111
  1998   001BAC  EFDA  F00D         	goto	u1110
  1999   001BB0                     u1111:
  2000   001BB0  EFB4  F00D         	goto	l2211
  2001   001BB4                     u1110:
  2002   001BB4                     
  2003                           ;ECU_Layer/LCD/ecu_lcd.c: 207:         ret = lcd_send_8bit_en (lcd);
  2004   001BB4  C00E  F00B         	movff	lcd_8bit_send_char_data@lcd,lcd_send_8bit_en@lcd
  2005   001BB8  C00F  F00C         	movff	lcd_8bit_send_char_data@lcd+1,lcd_send_8bit_en@lcd+1
  2006   001BBC  EC2D  F00F         	call	_lcd_send_8bit_en	;wreg free
  2007   001BC0  6E15               	movwf	lcd_8bit_send_char_data@ret^0,c
  2008   001BC2                     l2219:
  2009                           
  2010                           ;ECU_Layer/LCD/ecu_lcd.c: 209:     return ret ;
  2011   001BC2  5015               	movf	lcd_8bit_send_char_data@ret^0,w,c
  2012   001BC4  0012               	return		;funcret
  2013   001BC6                     __end_of_lcd_8bit_send_char_data:
  2014                           	callstack 0
  2015                           
  2016 ;; *************** function _lcd_send_8bit_en *****************
  2017 ;; Defined at:
  2018 ;;		line 316 in file "ECU_Layer/LCD/ecu_lcd.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  lcd             2   10[COMRAM] PTR const struct .
  2021 ;;		 -> lcd8bit(10), 
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;  ret             1   12[COMRAM] unsigned char 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      unsigned char 
  2026 ;; Registers used:
  2027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2033 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2036 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2037 ;;Total ram usage:        3 bytes
  2038 ;; Hardware stack levels used: 1
  2039 ;; Hardware stack levels required when called: 1
  2040 ;; This function calls:
  2041 ;;		_gpio_pin_write_logic
  2042 ;; This function is called by:
  2043 ;;		_lcd_8bit_send_command
  2044 ;;		_lcd_8bit_send_char_data
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           	psect	text10
  2049   001E5A                     __ptext10:
  2050                           	callstack 0
  2051   001E5A                     _lcd_send_8bit_en:
  2052                           	callstack 27
  2053   001E5A  0E01               	movlw	1
  2054   001E5C  240B               	addwf	lcd_send_8bit_en@lcd^0,w,c
  2055   001E5E  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2056   001E60  0E00               	movlw	0
  2057   001E62  200C               	addwfc	(lcd_send_8bit_en@lcd+1)^0,w,c
  2058   001E64  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2059   001E66  0E01               	movlw	1
  2060   001E68  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2061   001E6A  EC2A  F00B         	call	_gpio_pin_write_logic	;wreg free
  2062   001E6E                     
  2063                           ;ECU_Layer/LCD/ecu_lcd.c: 319:     _delay((unsigned long)((5)*(8000000UL/4000000.0)));
  2064   001E6E  0E03               	movlw	3
  2065   001E70                     u1867:
  2066   001E70  2EE8               	decfsz	wreg,f,c
  2067   001E72  D7FE               	bra	u1867
  2068   001E74  F000               	nop	
  2069   001E76                     
  2070                           ;ECU_Layer/LCD/ecu_lcd.c: 320:     ret = gpio_pin_write_logic(&(lcd->lcd_en), GPIO_LOW);
  2071   001E76  0E01               	movlw	1
  2072   001E78  240B               	addwf	lcd_send_8bit_en@lcd^0,w,c
  2073   001E7A  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2074   001E7C  0E00               	movlw	0
  2075   001E7E  200C               	addwfc	(lcd_send_8bit_en@lcd+1)^0,w,c
  2076   001E80  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2077   001E82  0E00               	movlw	0
  2078   001E84  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2079   001E86  EC2A  F00B         	call	_gpio_pin_write_logic	;wreg free
  2080   001E8A  6E0D               	movwf	lcd_send_8bit_en@ret^0,c
  2081   001E8C                     
  2082                           ;ECU_Layer/LCD/ecu_lcd.c: 321:     return ret;
  2083   001E8C  500D               	movf	lcd_send_8bit_en@ret^0,w,c
  2084   001E8E  0012               	return		;funcret
  2085   001E90                     __end_of_lcd_send_8bit_en:
  2086                           	callstack 0
  2087                           
  2088 ;; *************** function _lcd_4bit_initialize *****************
  2089 ;; Defined at:
  2090 ;;		line 18 in file "ECU_Layer/LCD/ecu_lcd.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;  lcd             2   36[COMRAM] PTR const struct .
  2093 ;;		 -> lcd4bit(6), 
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;  counter         2   40[COMRAM] int 
  2096 ;;  ret             1   42[COMRAM] unsigned char 
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      unsigned char 
  2099 ;; Registers used:
  2100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2106 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2107 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2108 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2110 ;;Total ram usage:        7 bytes
  2111 ;; Hardware stack levels used: 1
  2112 ;; Hardware stack levels required when called: 5
  2113 ;; This function calls:
  2114 ;;		_gpio_pin_initialize
  2115 ;;		_lcd_4bit_send_command
  2116 ;;		_lcd_4bit_send_string_pos
  2117 ;; This function is called by:
  2118 ;;		_ecu_layer_intialize
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           	psect	text11
  2123   00103E                     __ptext11:
  2124                           	callstack 0
  2125   00103E                     _lcd_4bit_initialize:
  2126                           	callstack 23
  2127   00103E                     
  2128                           ;ECU_Layer/LCD/ecu_lcd.c: 20:     if (((void*)0) == lcd ) {
  2129   00103E  5025               	movf	lcd_4bit_initialize@lcd^0,w,c
  2130   001040  1026               	iorwf	(lcd_4bit_initialize@lcd+1)^0,w,c
  2131   001042  A4D8               	btfss	status,2,c
  2132   001044  EF26  F008         	goto	u1201
  2133   001048  EF28  F008         	goto	u1200
  2134   00104C                     u1201:
  2135   00104C  EF2C  F008         	goto	l2311
  2136   001050                     u1200:
  2137   001050                     
  2138                           ;ECU_Layer/LCD/ecu_lcd.c: 21:         ret = (Std_ReturnType)0x00;
  2139   001050  0E00               	movlw	0
  2140   001052  6E2B               	movwf	lcd_4bit_initialize@ret^0,c
  2141                           
  2142                           ;ECU_Layer/LCD/ecu_lcd.c: 22:     }
  2143   001054  EFF0  F008         	goto	l2355
  2144   001058                     l2311:
  2145                           
  2146                           ;ECU_Layer/LCD/ecu_lcd.c: 24:         ret = gpio_pin_initialize (&(lcd->lcd_rs));
  2147   001058  C025  F00B         	movff	lcd_4bit_initialize@lcd,gpio_pin_initialize@_pin_config
  2148   00105C  C026  F00C         	movff	lcd_4bit_initialize@lcd+1,gpio_pin_initialize@_pin_config+1
  2149   001060  EC55  F00E         	call	_gpio_pin_initialize	;wreg free
  2150   001064  6E2B               	movwf	lcd_4bit_initialize@ret^0,c
  2151                           
  2152                           ;ECU_Layer/LCD/ecu_lcd.c: 25:         ret = gpio_pin_initialize (&(lcd->lcd_en));
  2153   001066  0E01               	movlw	1
  2154   001068  2425               	addwf	lcd_4bit_initialize@lcd^0,w,c
  2155   00106A  6E0B               	movwf	gpio_pin_initialize@_pin_config^0,c
  2156   00106C  0E00               	movlw	0
  2157   00106E  2026               	addwfc	(lcd_4bit_initialize@lcd+1)^0,w,c
  2158   001070  6E0C               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
  2159   001072  EC55  F00E         	call	_gpio_pin_initialize	;wreg free
  2160   001076  6E2B               	movwf	lcd_4bit_initialize@ret^0,c
  2161   001078                     
  2162                           ;ECU_Layer/LCD/ecu_lcd.c: 26:         for (int counter = 0 ; counter <4 ; counter ++){
  2163   001078  0E00               	movlw	0
  2164   00107A  6E2A               	movwf	(lcd_4bit_initialize@counter+1)^0,c
  2165   00107C  0E00               	movlw	0
  2166   00107E  6E29               	movwf	lcd_4bit_initialize@counter^0,c
  2167   001080                     l2319:
  2168   001080  5029               	movf	lcd_4bit_initialize@counter^0,w,c
  2169   001082  2425               	addwf	lcd_4bit_initialize@lcd^0,w,c
  2170   001084  6E27               	movwf	??_lcd_4bit_initialize^0,c
  2171   001086  502A               	movf	(lcd_4bit_initialize@counter+1)^0,w,c
  2172   001088  2026               	addwfc	(lcd_4bit_initialize@lcd+1)^0,w,c
  2173   00108A  6E28               	movwf	(??_lcd_4bit_initialize+1)^0,c
  2174   00108C  0E02               	movlw	2
  2175   00108E  2427               	addwf	??_lcd_4bit_initialize^0,w,c
  2176   001090  6E0B               	movwf	gpio_pin_initialize@_pin_config^0,c
  2177   001092  0E00               	movlw	0
  2178   001094  2028               	addwfc	(??_lcd_4bit_initialize+1)^0,w,c
  2179   001096  6E0C               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
  2180   001098  EC55  F00E         	call	_gpio_pin_initialize	;wreg free
  2181   00109C                     
  2182                           ;ECU_Layer/LCD/ecu_lcd.c: 28:     }
  2183   00109C  4A29               	infsnz	lcd_4bit_initialize@counter^0,f,c
  2184   00109E  2A2A               	incf	(lcd_4bit_initialize@counter+1)^0,f,c
  2185   0010A0  BE2A               	btfsc	(lcd_4bit_initialize@counter+1)^0,7,c
  2186   0010A2  EF5C  F008         	goto	u1211
  2187   0010A6  502A               	movf	(lcd_4bit_initialize@counter+1)^0,w,c
  2188   0010A8  E109               	bnz	u1210
  2189   0010AA  0E04               	movlw	4
  2190   0010AC  5C29               	subwf	lcd_4bit_initialize@counter^0,w,c
  2191   0010AE  A0D8               	btfss	status,0,c
  2192   0010B0  EF5C  F008         	goto	u1211
  2193   0010B4  EF5E  F008         	goto	u1210
  2194   0010B8                     u1211:
  2195   0010B8  EF40  F008         	goto	l2319
  2196   0010BC                     u1210:
  2197   0010BC                     
  2198                           ;ECU_Layer/LCD/ecu_lcd.c: 29:         _delay((unsigned long)((20)*(8000000UL/4000.0)));
  2199   0010BC  0E34               	movlw	52
  2200   0010BE  6E27               	movwf	??_lcd_4bit_initialize^0,c
  2201   0010C0  0EF2               	movlw	242
  2202   0010C2                     u1877:
  2203   0010C2  2EE8               	decfsz	wreg,f,c
  2204   0010C4  D7FE               	bra	u1877
  2205   0010C6  2E27               	decfsz	??_lcd_4bit_initialize^0,f,c
  2206   0010C8  D7FC               	bra	u1877
  2207   0010CA  C025  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2208   0010CE  C026  F010         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  2209   0010D2  0E38               	movlw	56
  2210   0010D4  6E11               	movwf	lcd_4bit_send_command@command^0,c
  2211   0010D6  ECE3  F00D         	call	_lcd_4bit_send_command	;wreg free
  2212   0010DA                     
  2213                           ;ECU_Layer/LCD/ecu_lcd.c: 31:         _delay((unsigned long)((5)*(8000000UL/4000.0)));
  2214   0010DA  0E0D               	movlw	13
  2215   0010DC  6E27               	movwf	??_lcd_4bit_initialize^0,c
  2216   0010DE  0EFC               	movlw	252
  2217   0010E0                     u1887:
  2218   0010E0  2EE8               	decfsz	wreg,f,c
  2219   0010E2  D7FE               	bra	u1887
  2220   0010E4  2E27               	decfsz	??_lcd_4bit_initialize^0,f,c
  2221   0010E6  D7FC               	bra	u1887
  2222   0010E8  C025  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2223   0010EC  C026  F010         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  2224   0010F0  0E38               	movlw	56
  2225   0010F2  6E11               	movwf	lcd_4bit_send_command@command^0,c
  2226   0010F4  ECE3  F00D         	call	_lcd_4bit_send_command	;wreg free
  2227   0010F8                     
  2228                           ;ECU_Layer/LCD/ecu_lcd.c: 33:         _delay((unsigned long)((150)*(8000000UL/4000000.0)
      +                          ));
  2229   0010F8  0E64               	movlw	100
  2230   0010FA                     u1897:
  2231   0010FA  2EE8               	decfsz	wreg,f,c
  2232   0010FC  D7FE               	bra	u1897
  2233   0010FE  C025  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2234   001102  C026  F010         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  2235   001106  0E38               	movlw	56
  2236   001108  6E11               	movwf	lcd_4bit_send_command@command^0,c
  2237   00110A  ECE3  F00D         	call	_lcd_4bit_send_command	;wreg free
  2238   00110E  C025  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2239   001112  C026  F010         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  2240   001116  0E01               	movlw	1
  2241   001118  6E11               	movwf	lcd_4bit_send_command@command^0,c
  2242   00111A  ECE3  F00D         	call	_lcd_4bit_send_command	;wreg free
  2243   00111E  C025  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2244   001122  C026  F010         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  2245   001126  0E02               	movlw	2
  2246   001128  6E11               	movwf	lcd_4bit_send_command@command^0,c
  2247   00112A  ECE3  F00D         	call	_lcd_4bit_send_command	;wreg free
  2248   00112E  C025  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2249   001132  C026  F010         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  2250   001136  0E06               	movlw	6
  2251   001138  6E11               	movwf	lcd_4bit_send_command@command^0,c
  2252   00113A  ECE3  F00D         	call	_lcd_4bit_send_command	;wreg free
  2253   00113E  C025  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2254   001142  C026  F010         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  2255   001146  0E0D               	movlw	13
  2256   001148  6E11               	movwf	lcd_4bit_send_command@command^0,c
  2257   00114A  ECE3  F00D         	call	_lcd_4bit_send_command	;wreg free
  2258   00114E  C025  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2259   001152  C026  F010         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  2260   001156  0E28               	movlw	40
  2261   001158  6E11               	movwf	lcd_4bit_send_command@command^0,c
  2262   00115A  ECE3  F00D         	call	_lcd_4bit_send_command	;wreg free
  2263   00115E  C025  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2264   001162  C026  F010         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  2265   001166  0E80               	movlw	128
  2266   001168  6E11               	movwf	lcd_4bit_send_command@command^0,c
  2267   00116A  ECE3  F00D         	call	_lcd_4bit_send_command	;wreg free
  2268   00116E  C025  F01A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_string_pos@lcd
  2269   001172  C026  F01B         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_string_pos@lcd+1
  2270   001176  0E01               	movlw	1
  2271   001178  6E1C               	movwf	lcd_4bit_send_string_pos@row^0,c
  2272   00117A  0E07               	movlw	7
  2273   00117C  6E1D               	movwf	lcd_4bit_send_string_pos@column^0,c
  2274   00117E  0E27               	movlw	low STR_1
  2275   001180  6E1E               	movwf	lcd_4bit_send_string_pos@str^0,c
  2276   001182  0E10               	movlw	high STR_1
  2277   001184  6E1F               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  2278   001186  ECBB  F00C         	call	_lcd_4bit_send_string_pos	;wreg free
  2279   00118A  C025  F01A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_string_pos@lcd
  2280   00118E  C026  F01B         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_string_pos@lcd+1
  2281   001192  0E03               	movlw	3
  2282   001194  6E1C               	movwf	lcd_4bit_send_string_pos@row^0,c
  2283   001196  0E04               	movlw	4
  2284   001198  6E1D               	movwf	lcd_4bit_send_string_pos@column^0,c
  2285   00119A  0E11               	movlw	low STR_2
  2286   00119C  6E1E               	movwf	lcd_4bit_send_string_pos@str^0,c
  2287   00119E  0E10               	movlw	high STR_2
  2288   0011A0  6E1F               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  2289   0011A2  ECBB  F00C         	call	_lcd_4bit_send_string_pos	;wreg free
  2290                           
  2291                           ;ECU_Layer/LCD/ecu_lcd.c: 44:         _delay((unsigned long)((2000)*(8000000UL/4000.0)))
      +                          ;
  2292   0011A6  0E15               	movlw	21
  2293   0011A8  6E28               	movwf	(??_lcd_4bit_initialize+1)^0,c
  2294   0011AA  0E4B               	movlw	75
  2295   0011AC  6E27               	movwf	??_lcd_4bit_initialize^0,c
  2296   0011AE  0EBE               	movlw	190
  2297   0011B0                     u1907:
  2298   0011B0  2EE8               	decfsz	wreg,f,c
  2299   0011B2  D7FE               	bra	u1907
  2300   0011B4  2E27               	decfsz	??_lcd_4bit_initialize^0,f,c
  2301   0011B6  D7FC               	bra	u1907
  2302   0011B8  2E28               	decfsz	(??_lcd_4bit_initialize+1)^0,f,c
  2303   0011BA  D7FA               	bra	u1907
  2304   0011BC  D000               	nop2	
  2305   0011BE  C025  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2306   0011C2  C026  F010         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  2307   0011C6  0E01               	movlw	1
  2308   0011C8  6E11               	movwf	lcd_4bit_send_command@command^0,c
  2309   0011CA  ECE3  F00D         	call	_lcd_4bit_send_command	;wreg free
  2310   0011CE                     
  2311                           ;ECU_Layer/LCD/ecu_lcd.c: 46:         ret = lcd_4bit_send_command(lcd, 0x02);
  2312   0011CE  C025  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2313   0011D2  C026  F010         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  2314   0011D6  0E02               	movlw	2
  2315   0011D8  6E11               	movwf	lcd_4bit_send_command@command^0,c
  2316   0011DA  ECE3  F00D         	call	_lcd_4bit_send_command	;wreg free
  2317   0011DE  6E2B               	movwf	lcd_4bit_initialize@ret^0,c
  2318   0011E0                     l2355:
  2319                           
  2320                           ;ECU_Layer/LCD/ecu_lcd.c: 49:     return ret ;
  2321   0011E0  502B               	movf	lcd_4bit_initialize@ret^0,w,c
  2322   0011E2  0012               	return		;funcret
  2323   0011E4                     __end_of_lcd_4bit_initialize:
  2324                           	callstack 0
  2325                           
  2326 ;; *************** function _lcd_4bit_send_string_pos *****************
  2327 ;; Defined at:
  2328 ;;		line 109 in file "ECU_Layer/LCD/ecu_lcd.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  lcd             2   25[COMRAM] PTR const struct .
  2331 ;;		 -> lcd4bit(6), 
  2332 ;;  row             1   27[COMRAM] unsigned char 
  2333 ;;  column          1   28[COMRAM] unsigned char 
  2334 ;;  str             2   29[COMRAM] PTR unsigned char 
  2335 ;;		 -> STR_7(14), STR_6(8), 
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;  string_count    2   34[COMRAM] int 
  2338 ;;  ret             1   33[COMRAM] unsigned char 
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      unsigned char 
  2341 ;; Registers used:
  2342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2348 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2350 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2351 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2352 ;;Total ram usage:       11 bytes
  2353 ;; Hardware stack levels used: 1
  2354 ;; Hardware stack levels required when called: 4
  2355 ;; This function calls:
  2356 ;;		_lcd_4bit_send_char_data
  2357 ;;		_lcd_4bit_set_cursor
  2358 ;; This function is called by:
  2359 ;;		_lcd_4bit_initialize
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           	psect	text12
  2364   001976                     __ptext12:
  2365                           	callstack 0
  2366   001976                     _lcd_4bit_send_string_pos:
  2367                           	callstack 23
  2368   001976                     
  2369                           ;ECU_Layer/LCD/ecu_lcd.c: 111:     if (((void*)0) == lcd || ((void*)0) == str) {
  2370   001976  501A               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  2371   001978  101B               	iorwf	(lcd_4bit_send_string_pos@lcd+1)^0,w,c
  2372   00197A  B4D8               	btfsc	status,2,c
  2373   00197C  EFC2  F00C         	goto	u1171
  2374   001980  EFC4  F00C         	goto	u1170
  2375   001984                     u1171:
  2376   001984  EFCD  F00C         	goto	l2289
  2377   001988                     u1170:
  2378   001988  501E               	movf	lcd_4bit_send_string_pos@str^0,w,c
  2379   00198A  101F               	iorwf	(lcd_4bit_send_string_pos@str+1)^0,w,c
  2380   00198C  A4D8               	btfss	status,2,c
  2381   00198E  EFCB  F00C         	goto	u1181
  2382   001992  EFCD  F00C         	goto	u1180
  2383   001996                     u1181:
  2384   001996  EFD1  F00C         	goto	l2291
  2385   00199A                     u1180:
  2386   00199A                     l2289:
  2387                           
  2388                           ;ECU_Layer/LCD/ecu_lcd.c: 112:         ret = (Std_ReturnType)0x00;
  2389   00199A  0E00               	movlw	0
  2390   00199C  6E22               	movwf	lcd_4bit_send_string_pos@ret^0,c
  2391                           
  2392                           ;ECU_Layer/LCD/ecu_lcd.c: 113:     }
  2393   00199E  EF0C  F00D         	goto	l2301
  2394   0019A2                     l2291:
  2395                           
  2396                           ;ECU_Layer/LCD/ecu_lcd.c: 115:         ret = lcd_4bit_set_cursor (lcd , row , column);
  2397   0019A2  C01A  F013         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  2398   0019A6  C01B  F014         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_set_cursor@lcd+1
  2399   0019AA  C01C  F015         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  2400   0019AE  C01D  F016         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@columns
  2401   0019B2  EC14  F00C         	call	_lcd_4bit_set_cursor	;wreg free
  2402   0019B6  6E22               	movwf	lcd_4bit_send_string_pos@ret^0,c
  2403   0019B8                     
  2404                           ;ECU_Layer/LCD/ecu_lcd.c: 116:         for (int string_counter = 0 ; str[string_counter]
      +                           != '\0' ; string_counter++ ){
  2405   0019B8  0E00               	movlw	0
  2406   0019BA  6E24               	movwf	(lcd_4bit_send_string_pos@string_counter+1)^0,c
  2407   0019BC  0E00               	movlw	0
  2408   0019BE  6E23               	movwf	lcd_4bit_send_string_pos@string_counter^0,c
  2409   0019C0  EFF8  F00C         	goto	l2299
  2410   0019C4                     l2295:
  2411                           
  2412                           ;ECU_Layer/LCD/ecu_lcd.c: 117:                 ret = lcd_4bit_send_char_data (lcd , str[
      +                          string_counter]);
  2413   0019C4  C01A  F00F         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  2414   0019C8  C01B  F010         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  2415   0019CC  5023               	movf	lcd_4bit_send_string_pos@string_counter^0,w,c
  2416   0019CE  241E               	addwf	lcd_4bit_send_string_pos@str^0,w,c
  2417   0019D0  6E20               	movwf	??_lcd_4bit_send_string_pos^0,c
  2418   0019D2  5024               	movf	(lcd_4bit_send_string_pos@string_counter+1)^0,w,c
  2419   0019D4  201F               	addwfc	(lcd_4bit_send_string_pos@str+1)^0,w,c
  2420   0019D6  6E21               	movwf	(??_lcd_4bit_send_string_pos+1)^0,c
  2421   0019D8  C020  FFF6         	movff	??_lcd_4bit_send_string_pos,tblptrl
  2422   0019DC  C021  FFF7         	movff	??_lcd_4bit_send_string_pos+1,tblptrh
  2423   0019E0                     	if	0	;tblptru may be non-zero
  2424   0019E0                     	endif
  2425   0019E0                     	if	0	;tblptru may be non-zero
  2426   0019E0                     	endif
  2427   0019E0  0008               	tblrd		*
  2428   0019E2  CFF5 F011          	movff	tablat,lcd_4bit_send_char_data@data
  2429   0019E6  EC1C  F00E         	call	_lcd_4bit_send_char_data	;wreg free
  2430   0019EA  6E22               	movwf	lcd_4bit_send_string_pos@ret^0,c
  2431   0019EC                     
  2432                           ;ECU_Layer/LCD/ecu_lcd.c: 118:         }
  2433   0019EC  4A23               	infsnz	lcd_4bit_send_string_pos@string_counter^0,f,c
  2434   0019EE  2A24               	incf	(lcd_4bit_send_string_pos@string_counter+1)^0,f,c
  2435   0019F0                     l2299:
  2436   0019F0  5023               	movf	lcd_4bit_send_string_pos@string_counter^0,w,c
  2437   0019F2  241E               	addwf	lcd_4bit_send_string_pos@str^0,w,c
  2438   0019F4  6E20               	movwf	??_lcd_4bit_send_string_pos^0,c
  2439   0019F6  5024               	movf	(lcd_4bit_send_string_pos@string_counter+1)^0,w,c
  2440   0019F8  201F               	addwfc	(lcd_4bit_send_string_pos@str+1)^0,w,c
  2441   0019FA  6E21               	movwf	(??_lcd_4bit_send_string_pos+1)^0,c
  2442   0019FC  C020  FFF6         	movff	??_lcd_4bit_send_string_pos,tblptrl
  2443   001A00  C021  FFF7         	movff	??_lcd_4bit_send_string_pos+1,tblptrh
  2444   001A04                     	if	0	;tblptru may be non-zero
  2445   001A04                     	endif
  2446   001A04                     	if	0	;tblptru may be non-zero
  2447   001A04                     	endif
  2448   001A04  0008               	tblrd		*
  2449   001A06  50F5               	movf	tablat,w,c
  2450   001A08  0900               	iorlw	0
  2451   001A0A  A4D8               	btfss	status,2,c
  2452   001A0C  EF0A  F00D         	goto	u1191
  2453   001A10  EF0C  F00D         	goto	u1190
  2454   001A14                     u1191:
  2455   001A14  EFE2  F00C         	goto	l2295
  2456   001A18                     u1190:
  2457   001A18                     l2301:
  2458                           
  2459                           ;ECU_Layer/LCD/ecu_lcd.c: 121:     return ret ;
  2460   001A18  5022               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  2461   001A1A  0012               	return		;funcret
  2462   001A1C                     __end_of_lcd_4bit_send_string_pos:
  2463                           	callstack 0
  2464                           
  2465 ;; *************** function _lcd_4bit_set_cursor *****************
  2466 ;; Defined at:
  2467 ;;		line 346 in file "ECU_Layer/LCD/ecu_lcd.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  lcd             2   18[COMRAM] PTR const struct .
  2470 ;;		 -> lcd4bit(6), 
  2471 ;;  row             1   20[COMRAM] unsigned char 
  2472 ;;  columns         1   21[COMRAM] unsigned char 
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;  ret             1   24[COMRAM] unsigned char 
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  1    wreg      unsigned char 
  2477 ;; Registers used:
  2478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2484 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2485 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2486 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2487 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2488 ;;Total ram usage:        7 bytes
  2489 ;; Hardware stack levels used: 1
  2490 ;; Hardware stack levels required when called: 3
  2491 ;; This function calls:
  2492 ;;		_lcd_4bit_send_command
  2493 ;; This function is called by:
  2494 ;;		_lcd_4bit_send_string_pos
  2495 ;;		_lcd_4bit_send_char_data_pos
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           	psect	text13
  2500   001828                     __ptext13:
  2501                           	callstack 0
  2502   001828                     _lcd_4bit_set_cursor:
  2503                           	callstack 23
  2504   001828                     
  2505                           ;ECU_Layer/LCD/ecu_lcd.c: 347:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2506   001828  0E01               	movlw	1
  2507   00182A  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
  2508   00182C                     
  2509                           ;ECU_Layer/LCD/ecu_lcd.c: 348:     columns --;
  2510   00182C  0616               	decf	lcd_4bit_set_cursor@columns^0,f,c
  2511                           
  2512                           ;ECU_Layer/LCD/ecu_lcd.c: 349:     switch (row){
  2513   00182E  EF49  F00C         	goto	l2187
  2514   001832                     l2179:
  2515   001832  C013  F00F         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  2516   001836  C014  F010         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  2517   00183A  5016               	movf	lcd_4bit_set_cursor@columns^0,w,c
  2518   00183C  0F80               	addlw	128
  2519   00183E  6E11               	movwf	lcd_4bit_send_command@command^0,c
  2520   001840  ECE3  F00D         	call	_lcd_4bit_send_command	;wreg free
  2521   001844  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
  2522   001846  EF66  F00C         	goto	l2189
  2523   00184A                     l2181:
  2524   00184A  C013  F00F         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  2525   00184E  C014  F010         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  2526   001852  5016               	movf	lcd_4bit_set_cursor@columns^0,w,c
  2527   001854  0FC0               	addlw	192
  2528   001856  6E11               	movwf	lcd_4bit_send_command@command^0,c
  2529   001858  ECE3  F00D         	call	_lcd_4bit_send_command	;wreg free
  2530   00185C  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
  2531   00185E  EF66  F00C         	goto	l2189
  2532   001862                     l2183:
  2533   001862  C013  F00F         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  2534   001866  C014  F010         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  2535   00186A  5016               	movf	lcd_4bit_set_cursor@columns^0,w,c
  2536   00186C  0F94               	addlw	148
  2537   00186E  6E11               	movwf	lcd_4bit_send_command@command^0,c
  2538   001870  ECE3  F00D         	call	_lcd_4bit_send_command	;wreg free
  2539   001874  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
  2540   001876  EF66  F00C         	goto	l2189
  2541   00187A                     l2185:
  2542   00187A  C013  F00F         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  2543   00187E  C014  F010         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  2544   001882  5016               	movf	lcd_4bit_set_cursor@columns^0,w,c
  2545   001884  0FD4               	addlw	212
  2546   001886  6E11               	movwf	lcd_4bit_send_command@command^0,c
  2547   001888  ECE3  F00D         	call	_lcd_4bit_send_command	;wreg free
  2548   00188C  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
  2549   00188E  EF66  F00C         	goto	l2189
  2550   001892                     l2187:
  2551   001892  5015               	movf	lcd_4bit_set_cursor@row^0,w,c
  2552   001894  6E17               	movwf	??_lcd_4bit_set_cursor^0,c
  2553   001896  6A18               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
  2554                           
  2555                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2556                           ; Switch size 1, requested type "simple"
  2557                           ; Number of cases is 1, Range of values is 0 to 0
  2558                           ; switch strategies available:
  2559                           ; Name         Instructions Cycles
  2560                           ; simple_byte            4     3 (average)
  2561                           ;	Chosen strategy is simple_byte
  2562   001898  5018               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
  2563   00189A  0A00               	xorlw	0	; case 0
  2564   00189C  B4D8               	btfsc	status,2,c
  2565   00189E  EF53  F00C         	goto	l2855
  2566   0018A2  EF66  F00C         	goto	l2189
  2567   0018A6                     l2855:
  2568                           
  2569                           ; Switch size 1, requested type "simple"
  2570                           ; Number of cases is 4, Range of values is 1 to 4
  2571                           ; switch strategies available:
  2572                           ; Name         Instructions Cycles
  2573                           ; simple_byte           13     7 (average)
  2574                           ;	Chosen strategy is simple_byte
  2575   0018A6  5017               	movf	??_lcd_4bit_set_cursor^0,w,c
  2576   0018A8  0A01               	xorlw	1	; case 1
  2577   0018AA  B4D8               	btfsc	status,2,c
  2578   0018AC  EF19  F00C         	goto	l2179
  2579   0018B0  0A03               	xorlw	3	; case 2
  2580   0018B2  B4D8               	btfsc	status,2,c
  2581   0018B4  EF25  F00C         	goto	l2181
  2582   0018B8  0A01               	xorlw	1	; case 3
  2583   0018BA  B4D8               	btfsc	status,2,c
  2584   0018BC  EF31  F00C         	goto	l2183
  2585   0018C0  0A07               	xorlw	7	; case 4
  2586   0018C2  B4D8               	btfsc	status,2,c
  2587   0018C4  EF3D  F00C         	goto	l2185
  2588   0018C8  EF66  F00C         	goto	l2189
  2589   0018CC                     l2189:
  2590                           
  2591                           ;ECU_Layer/LCD/ecu_lcd.c: 356:     return ret;
  2592   0018CC  5019               	movf	lcd_4bit_set_cursor@ret^0,w,c
  2593   0018CE  0012               	return		;funcret
  2594   0018D0                     __end_of_lcd_4bit_set_cursor:
  2595                           	callstack 0
  2596                           
  2597 ;; *************** function _lcd_4bit_send_command *****************
  2598 ;; Defined at:
  2599 ;;		line 51 in file "ECU_Layer/LCD/ecu_lcd.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;  lcd             2   14[COMRAM] PTR const struct .
  2602 ;;		 -> lcd4bit(6), 
  2603 ;;  command         1   16[COMRAM] unsigned char 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  ret             1   17[COMRAM] unsigned char 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  1    wreg      unsigned char 
  2608 ;; Registers used:
  2609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2615 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2618 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2619 ;;Total ram usage:        4 bytes
  2620 ;; Hardware stack levels used: 1
  2621 ;; Hardware stack levels required when called: 2
  2622 ;; This function calls:
  2623 ;;		_gpio_pin_write_logic
  2624 ;;		_lcd_send_4bit
  2625 ;;		_lcd_send_4bit_en
  2626 ;; This function is called by:
  2627 ;;		_lcd_4bit_initialize
  2628 ;;		_lcd_4bit_set_cursor
  2629 ;;		_lcd_4bit_send_custom_char
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text14
  2634   001BC6                     __ptext14:
  2635                           	callstack 0
  2636   001BC6                     _lcd_4bit_send_command:
  2637                           	callstack 23
  2638   001BC6                     
  2639                           ;ECU_Layer/LCD/ecu_lcd.c: 53:     if (((void*)0) == lcd ) {
  2640   001BC6  500F               	movf	lcd_4bit_send_command@lcd^0,w,c
  2641   001BC8  1010               	iorwf	(lcd_4bit_send_command@lcd+1)^0,w,c
  2642   001BCA  A4D8               	btfss	status,2,c
  2643   001BCC  EFEA  F00D         	goto	u1011
  2644   001BD0  EFEC  F00D         	goto	u1010
  2645   001BD4                     u1011:
  2646   001BD4  EFF0  F00D         	goto	l2133
  2647   001BD8                     u1010:
  2648   001BD8                     
  2649                           ;ECU_Layer/LCD/ecu_lcd.c: 54:         ret = (Std_ReturnType)0x00;
  2650   001BD8  0E00               	movlw	0
  2651   001BDA  6E12               	movwf	lcd_4bit_send_command@ret^0,c
  2652                           
  2653                           ;ECU_Layer/LCD/ecu_lcd.c: 55:     }
  2654   001BDC  EF1A  F00E         	goto	l2135
  2655   001BE0                     l2133:
  2656                           
  2657                           ;ECU_Layer/LCD/ecu_lcd.c: 57:         ret = gpio_pin_write_logic (&(lcd->lcd_rs),GPIO_LO
      +                          W);
  2658   001BE0  C00F  F001         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  2659   001BE4  C010  F002         	movff	lcd_4bit_send_command@lcd+1,gpio_pin_write_logic@_pin_config+1
  2660   001BE8  0E00               	movlw	0
  2661   001BEA  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2662   001BEC  EC2A  F00B         	call	_gpio_pin_write_logic	;wreg free
  2663   001BF0  6E12               	movwf	lcd_4bit_send_command@ret^0,c
  2664                           
  2665                           ;ECU_Layer/LCD/ecu_lcd.c: 58:         ret = lcd_send_4bit (lcd , command >> 4);
  2666   001BF2  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_send_4bit@lcd
  2667   001BF6  C010  F00C         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bit@lcd+1
  2668   001BFA  3811               	swapf	lcd_4bit_send_command@command^0,w,c
  2669   001BFC  0B0F               	andlw	15
  2670   001BFE  6E0D               	movwf	lcd_send_4bit@data_command^0,c
  2671   001C00  EC8B  F00E         	call	_lcd_send_4bit	;wreg free
  2672   001C04  6E12               	movwf	lcd_4bit_send_command@ret^0,c
  2673                           
  2674                           ;ECU_Layer/LCD/ecu_lcd.c: 59:         ret = lcd_send_4bit_en (lcd);
  2675   001C06  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_send_4bit_en@lcd
  2676   001C0A  C010  F00C         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bit_en@lcd+1
  2677   001C0E  EC48  F00F         	call	_lcd_send_4bit_en	;wreg free
  2678   001C12  6E12               	movwf	lcd_4bit_send_command@ret^0,c
  2679                           
  2680                           ;ECU_Layer/LCD/ecu_lcd.c: 60:         ret = lcd_send_4bit (lcd , command);
  2681   001C14  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_send_4bit@lcd
  2682   001C18  C010  F00C         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bit@lcd+1
  2683   001C1C  C011  F00D         	movff	lcd_4bit_send_command@command,lcd_send_4bit@data_command
  2684   001C20  EC8B  F00E         	call	_lcd_send_4bit	;wreg free
  2685   001C24  6E12               	movwf	lcd_4bit_send_command@ret^0,c
  2686                           
  2687                           ;ECU_Layer/LCD/ecu_lcd.c: 61:         ret = lcd_send_4bit_en (lcd);
  2688   001C26  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_send_4bit_en@lcd
  2689   001C2A  C010  F00C         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bit_en@lcd+1
  2690   001C2E  EC48  F00F         	call	_lcd_send_4bit_en	;wreg free
  2691   001C32  6E12               	movwf	lcd_4bit_send_command@ret^0,c
  2692   001C34                     l2135:
  2693                           
  2694                           ;ECU_Layer/LCD/ecu_lcd.c: 64:     return ret ;
  2695   001C34  5012               	movf	lcd_4bit_send_command@ret^0,w,c
  2696   001C36  0012               	return		;funcret
  2697   001C38                     __end_of_lcd_4bit_send_command:
  2698                           	callstack 0
  2699                           
  2700 ;; *************** function _lcd_4bit_send_char_data *****************
  2701 ;; Defined at:
  2702 ;;		line 67 in file "ECU_Layer/LCD/ecu_lcd.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;  lcd             2   14[COMRAM] PTR const struct .
  2705 ;;		 -> lcd4bit(6), 
  2706 ;;  data            1   16[COMRAM] unsigned char 
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;  ret             1   17[COMRAM] unsigned char 
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      unsigned char 
  2711 ;; Registers used:
  2712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2718 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2719 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2721 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2722 ;;Total ram usage:        4 bytes
  2723 ;; Hardware stack levels used: 1
  2724 ;; Hardware stack levels required when called: 2
  2725 ;; This function calls:
  2726 ;;		_gpio_pin_write_logic
  2727 ;;		_lcd_send_4bit
  2728 ;;		_lcd_send_4bit_en
  2729 ;; This function is called by:
  2730 ;;		_lcd_4bit_send_string_pos
  2731 ;;		_lcd_4bit_send_char_data_pos
  2732 ;;		_lcd_4bit_send_string
  2733 ;;		_lcd_4bit_send_custom_char
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           	psect	text15
  2738   001C38                     __ptext15:
  2739                           	callstack 0
  2740   001C38                     _lcd_4bit_send_char_data:
  2741                           	callstack 24
  2742   001C38                     
  2743                           ;ECU_Layer/LCD/ecu_lcd.c: 69:     if (((void*)0) == lcd ) {
  2744   001C38  500F               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  2745   001C3A  1010               	iorwf	(lcd_4bit_send_char_data@lcd+1)^0,w,c
  2746   001C3C  A4D8               	btfss	status,2,c
  2747   001C3E  EF23  F00E         	goto	u1081
  2748   001C42  EF25  F00E         	goto	u1080
  2749   001C46                     u1081:
  2750   001C46  EF29  F00E         	goto	l2169
  2751   001C4A                     u1080:
  2752   001C4A                     
  2753                           ;ECU_Layer/LCD/ecu_lcd.c: 70:         ret = (Std_ReturnType)0x00;
  2754   001C4A  0E00               	movlw	0
  2755   001C4C  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
  2756                           
  2757                           ;ECU_Layer/LCD/ecu_lcd.c: 71:     }
  2758   001C4E  EF53  F00E         	goto	l2171
  2759   001C52                     l2169:
  2760                           
  2761                           ;ECU_Layer/LCD/ecu_lcd.c: 73:         ret = gpio_pin_write_logic (&(lcd->lcd_rs),GPIO_HI
      +                          GH);
  2762   001C52  C00F  F001         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  2763   001C56  C010  F002         	movff	lcd_4bit_send_char_data@lcd+1,gpio_pin_write_logic@_pin_config+1
  2764   001C5A  0E01               	movlw	1
  2765   001C5C  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2766   001C5E  EC2A  F00B         	call	_gpio_pin_write_logic	;wreg free
  2767   001C62  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
  2768                           
  2769                           ;ECU_Layer/LCD/ecu_lcd.c: 74:         ret = lcd_send_4bit (lcd , data >> 4);
  2770   001C64  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bit@lcd
  2771   001C68  C010  F00C         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bit@lcd+1
  2772   001C6C  3811               	swapf	lcd_4bit_send_char_data@data^0,w,c
  2773   001C6E  0B0F               	andlw	15
  2774   001C70  6E0D               	movwf	lcd_send_4bit@data_command^0,c
  2775   001C72  EC8B  F00E         	call	_lcd_send_4bit	;wreg free
  2776   001C76  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
  2777                           
  2778                           ;ECU_Layer/LCD/ecu_lcd.c: 75:         ret = lcd_send_4bit_en (lcd);
  2779   001C78  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bit_en@lcd
  2780   001C7C  C010  F00C         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bit_en@lcd+1
  2781   001C80  EC48  F00F         	call	_lcd_send_4bit_en	;wreg free
  2782   001C84  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
  2783                           
  2784                           ;ECU_Layer/LCD/ecu_lcd.c: 76:         ret = lcd_send_4bit (lcd , data);
  2785   001C86  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bit@lcd
  2786   001C8A  C010  F00C         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bit@lcd+1
  2787   001C8E  C011  F00D         	movff	lcd_4bit_send_char_data@data,lcd_send_4bit@data_command
  2788   001C92  EC8B  F00E         	call	_lcd_send_4bit	;wreg free
  2789   001C96  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
  2790                           
  2791                           ;ECU_Layer/LCD/ecu_lcd.c: 77:         ret = lcd_send_4bit_en (lcd);
  2792   001C98  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bit_en@lcd
  2793   001C9C  C010  F00C         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bit_en@lcd+1
  2794   001CA0  EC48  F00F         	call	_lcd_send_4bit_en	;wreg free
  2795   001CA4  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
  2796   001CA6                     l2171:
  2797                           
  2798                           ;ECU_Layer/LCD/ecu_lcd.c: 80:     return ret ;
  2799   001CA6  5012               	movf	lcd_4bit_send_char_data@ret^0,w,c
  2800   001CA8  0012               	return		;funcret
  2801   001CAA                     __end_of_lcd_4bit_send_char_data:
  2802                           	callstack 0
  2803                           
  2804 ;; *************** function _lcd_send_4bit_en *****************
  2805 ;; Defined at:
  2806 ;;		line 324 in file "ECU_Layer/LCD/ecu_lcd.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;  lcd             2   10[COMRAM] PTR const struct .
  2809 ;;		 -> lcd4bit(6), 
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;  ret             1   12[COMRAM] unsigned char 
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  1    wreg      unsigned char 
  2814 ;; Registers used:
  2815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2821 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2822 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2824 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;Total ram usage:        3 bytes
  2826 ;; Hardware stack levels used: 1
  2827 ;; Hardware stack levels required when called: 1
  2828 ;; This function calls:
  2829 ;;		_gpio_pin_write_logic
  2830 ;; This function is called by:
  2831 ;;		_lcd_4bit_send_command
  2832 ;;		_lcd_4bit_send_char_data
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           	psect	text16
  2837   001E90                     __ptext16:
  2838                           	callstack 0
  2839   001E90                     _lcd_send_4bit_en:
  2840                           	callstack 23
  2841   001E90  0E01               	movlw	1
  2842   001E92  240B               	addwf	lcd_send_4bit_en@lcd^0,w,c
  2843   001E94  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2844   001E96  0E00               	movlw	0
  2845   001E98  200C               	addwfc	(lcd_send_4bit_en@lcd+1)^0,w,c
  2846   001E9A  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2847   001E9C  0E01               	movlw	1
  2848   001E9E  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2849   001EA0  EC2A  F00B         	call	_gpio_pin_write_logic	;wreg free
  2850   001EA4                     
  2851                           ;ECU_Layer/LCD/ecu_lcd.c: 327:     _delay((unsigned long)((5)*(8000000UL/4000000.0)));
  2852   001EA4  0E03               	movlw	3
  2853   001EA6                     u1917:
  2854   001EA6  2EE8               	decfsz	wreg,f,c
  2855   001EA8  D7FE               	bra	u1917
  2856   001EAA  F000               	nop	
  2857   001EAC                     
  2858                           ;ECU_Layer/LCD/ecu_lcd.c: 328:     ret = gpio_pin_write_logic(&(lcd->lcd_en), GPIO_LOW);
  2859   001EAC  0E01               	movlw	1
  2860   001EAE  240B               	addwf	lcd_send_4bit_en@lcd^0,w,c
  2861   001EB0  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2862   001EB2  0E00               	movlw	0
  2863   001EB4  200C               	addwfc	(lcd_send_4bit_en@lcd+1)^0,w,c
  2864   001EB6  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2865   001EB8  0E00               	movlw	0
  2866   001EBA  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2867   001EBC  EC2A  F00B         	call	_gpio_pin_write_logic	;wreg free
  2868   001EC0  6E0D               	movwf	lcd_send_4bit_en@ret^0,c
  2869   001EC2                     
  2870                           ;ECU_Layer/LCD/ecu_lcd.c: 329:     return ret;
  2871   001EC2  500D               	movf	lcd_send_4bit_en@ret^0,w,c
  2872   001EC4  0012               	return		;funcret
  2873   001EC6                     __end_of_lcd_send_4bit_en:
  2874                           	callstack 0
  2875                           
  2876 ;; *************** function _lcd_send_4bit *****************
  2877 ;; Defined at:
  2878 ;;		line 307 in file "ECU_Layer/LCD/ecu_lcd.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;  lcd             2   10[COMRAM] PTR const struct .
  2881 ;;		 -> lcd4bit(6), 
  2882 ;;  data_command    1   12[COMRAM] unsigned char 
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;  ret             1   13[COMRAM] unsigned char 
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  1    wreg      unsigned char 
  2887 ;; Registers used:
  2888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2894 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;Total ram usage:        4 bytes
  2899 ;; Hardware stack levels used: 1
  2900 ;; Hardware stack levels required when called: 1
  2901 ;; This function calls:
  2902 ;;		_gpio_pin_write_logic
  2903 ;; This function is called by:
  2904 ;;		_lcd_4bit_send_command
  2905 ;;		_lcd_4bit_send_char_data
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           	psect	text17
  2910   001D16                     __ptext17:
  2911                           	callstack 0
  2912   001D16                     _lcd_send_4bit:
  2913                           	callstack 23
  2914   001D16  0E02               	movlw	2
  2915   001D18  240B               	addwf	lcd_send_4bit@lcd^0,w,c
  2916   001D1A  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2917   001D1C  0E00               	movlw	0
  2918   001D1E  200C               	addwfc	(lcd_send_4bit@lcd+1)^0,w,c
  2919   001D20  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2920   001D22  500D               	movf	lcd_send_4bit@data_command^0,w,c
  2921   001D24  0B01               	andlw	1
  2922   001D26  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2923   001D28  EC2A  F00B         	call	_gpio_pin_write_logic	;wreg free
  2924   001D2C  0E03               	movlw	3
  2925   001D2E  240B               	addwf	lcd_send_4bit@lcd^0,w,c
  2926   001D30  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2927   001D32  0E00               	movlw	0
  2928   001D34  200C               	addwfc	(lcd_send_4bit@lcd+1)^0,w,c
  2929   001D36  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2930   001D38  90D8               	bcf	status,0,c
  2931   001D3A  300D               	rrcf	lcd_send_4bit@data_command^0,w,c
  2932   001D3C  0B01               	andlw	1
  2933   001D3E  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2934   001D40  EC2A  F00B         	call	_gpio_pin_write_logic	;wreg free
  2935   001D44  0E04               	movlw	4
  2936   001D46  240B               	addwf	lcd_send_4bit@lcd^0,w,c
  2937   001D48  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2938   001D4A  0E00               	movlw	0
  2939   001D4C  200C               	addwfc	(lcd_send_4bit@lcd+1)^0,w,c
  2940   001D4E  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2941   001D50  400D               	rrncf	lcd_send_4bit@data_command^0,w,c
  2942   001D52  42E8               	rrncf	wreg,f,c
  2943   001D54  0B3F               	andlw	63
  2944   001D56  0B01               	andlw	1
  2945   001D58  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2946   001D5A  EC2A  F00B         	call	_gpio_pin_write_logic	;wreg free
  2947   001D5E                     
  2948                           ;ECU_Layer/LCD/ecu_lcd.c: 312:     ret = gpio_pin_write_logic (&(lcd->lcd_data[3]), (dat
      +                          a_command >>3) & 0x01);
  2949   001D5E  0E05               	movlw	5
  2950   001D60  240B               	addwf	lcd_send_4bit@lcd^0,w,c
  2951   001D62  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2952   001D64  0E00               	movlw	0
  2953   001D66  200C               	addwfc	(lcd_send_4bit@lcd+1)^0,w,c
  2954   001D68  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2955   001D6A  380D               	swapf	lcd_send_4bit@data_command^0,w,c
  2956   001D6C  46E8               	rlncf	wreg,f,c
  2957   001D6E  0B1F               	andlw	31
  2958   001D70  0B01               	andlw	1
  2959   001D72  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2960   001D74  EC2A  F00B         	call	_gpio_pin_write_logic	;wreg free
  2961   001D78  6E0E               	movwf	lcd_send_4bit@ret^0,c
  2962                           
  2963                           ;ECU_Layer/LCD/ecu_lcd.c: 313:     return ret ;
  2964   001D7A  500E               	movf	lcd_send_4bit@ret^0,w,c
  2965   001D7C  0012               	return		;funcret
  2966   001D7E                     __end_of_lcd_send_4bit:
  2967                           	callstack 0
  2968                           
  2969 ;; *************** function _gpio_pin_initialize *****************
  2970 ;; Defined at:
  2971 ;;		line 154 in file "MCAL_layer/GPIO/hal_gpio.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  _pin_config     2   10[COMRAM] PTR const struct .
  2974 ;;		 -> lcd4bit.lcd_data(4), lcd4bit(6), lcd8bit.lcd_data(8), lcd8bit(10), 
  2975 ;;		 -> led_intialized@pin_obj(1), 
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;  ret             1   13[COMRAM] unsigned char 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1    wreg      unsigned char 
  2980 ;; Registers used:
  2981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2987 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2988 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;Total ram usage:        4 bytes
  2992 ;; Hardware stack levels used: 1
  2993 ;; Hardware stack levels required when called: 1
  2994 ;; This function calls:
  2995 ;;		_gpio_pin_direction_initialize
  2996 ;;		_gpio_pin_write_logic
  2997 ;; This function is called by:
  2998 ;;		_lcd_4bit_initialize
  2999 ;;		_lcd_8bit_initialize
  3000 ;;		_led_intialized
  3001 ;;		_seven_segment_initialize
  3002 ;;		_Keypad_initialize
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           	psect	text18
  3007   001CAA                     __ptext18:
  3008                           	callstack 0
  3009   001CAA                     _gpio_pin_initialize:
  3010                           	callstack 26
  3011   001CAA                     
  3012                           ;MCAL_layer/GPIO/hal_gpio.c: 156:     if (((void*)0) == _pin_config || _pin_config-> pin
      +                           > 8 -1) {
  3013   001CAA  500B               	movf	gpio_pin_initialize@_pin_config^0,w,c
  3014   001CAC  100C               	iorwf	(gpio_pin_initialize@_pin_config+1)^0,w,c
  3015   001CAE  B4D8               	btfsc	status,2,c
  3016   001CB0  EF5C  F00E         	goto	u1121
  3017   001CB4  EF5E  F00E         	goto	u1120
  3018   001CB8                     u1121:
  3019   001CB8  EF6F  F00E         	goto	l2253
  3020   001CBC                     u1120:
  3021   001CBC  C00B  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
  3022   001CC0  C00C  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
  3023   001CC4  30DF               	rrcf	223,w,c
  3024   001CC6  32E8               	rrcf	wreg,f,c
  3025   001CC8  32E8               	rrcf	wreg,f,c
  3026   001CCA  0B07               	andlw	7
  3027   001CCC  6E0D               	movwf	??_gpio_pin_initialize^0,c
  3028   001CCE  0E07               	movlw	7
  3029   001CD0  640D               	cpfsgt	??_gpio_pin_initialize^0,c
  3030   001CD2  EF6D  F00E         	goto	u1131
  3031   001CD6  EF6F  F00E         	goto	u1130
  3032   001CDA                     u1131:
  3033   001CDA  EF73  F00E         	goto	l2255
  3034   001CDE                     u1130:
  3035   001CDE                     l2253:
  3036                           
  3037                           ;MCAL_layer/GPIO/hal_gpio.c: 157:         ret = (Std_ReturnType)0x00;
  3038   001CDE  0E00               	movlw	0
  3039   001CE0  6E0E               	movwf	gpio_pin_initialize@ret^0,c
  3040                           
  3041                           ;MCAL_layer/GPIO/hal_gpio.c: 158:     }
  3042   001CE2  EF89  F00E         	goto	l2257
  3043   001CE6                     l2255:
  3044                           
  3045                           ;MCAL_layer/GPIO/hal_gpio.c: 160:         ret = gpio_pin_direction_initialize(_pin_confi
      +                          g);
  3046   001CE6  C00B  F001         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_initialize@_pin_config
  3047   001CEA  C00C  F002         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_direction_initialize@_pin_config+1
  3048   001CEE  EC88  F00A         	call	_gpio_pin_direction_initialize	;wreg free
  3049   001CF2  6E0E               	movwf	gpio_pin_initialize@ret^0,c
  3050                           
  3051                           ;MCAL_layer/GPIO/hal_gpio.c: 161:         ret = gpio_pin_write_logic(_pin_config, _pin_c
      +                          onfig->logic);
  3052   001CF4  C00B  F001         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
  3053   001CF8  C00C  F002         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
  3054   001CFC  C00B  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
  3055   001D00  C00C  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
  3056   001D04  0E00               	movlw	0
  3057   001D06  BEDF               	btfsc	indf2,7,c
  3058   001D08  0E01               	movlw	1
  3059   001D0A  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  3060   001D0C  EC2A  F00B         	call	_gpio_pin_write_logic	;wreg free
  3061   001D10  6E0E               	movwf	gpio_pin_initialize@ret^0,c
  3062   001D12                     l2257:
  3063                           
  3064                           ;MCAL_layer/GPIO/hal_gpio.c: 164:     return ret;
  3065   001D12  500E               	movf	gpio_pin_initialize@ret^0,w,c
  3066   001D14  0012               	return		;funcret
  3067   001D16                     __end_of_gpio_pin_initialize:
  3068                           	callstack 0
  3069                           
  3070 ;; *************** function _gpio_pin_write_logic *****************
  3071 ;; Defined at:
  3072 ;;		line 81 in file "MCAL_layer/GPIO/hal_gpio.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  3075 ;;		 -> lcd4bit.lcd_data(4), lcd4bit(6), lcd8bit.lcd_data(8), lcd8bit(10), 
  3076 ;;		 -> led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_intialized@pin_obj(1), 
  3077 ;;  logic           1    2[COMRAM] enum E2962
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;  ret             1    9[COMRAM] unsigned char 
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  1    wreg      unsigned char 
  3082 ;; Registers used:
  3083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3089 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3090 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3091 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3092 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3093 ;;Total ram usage:       10 bytes
  3094 ;; Hardware stack levels used: 1
  3095 ;; This function calls:
  3096 ;;		Nothing
  3097 ;; This function is called by:
  3098 ;;		_gpio_pin_initialize
  3099 ;;		_lcd_4bit_send_command
  3100 ;;		_lcd_4bit_send_char_data
  3101 ;;		_lcd_8bit_send_command
  3102 ;;		_lcd_8bit_send_char_data
  3103 ;;		_lcd_send_4bit
  3104 ;;		_lcd_send_8bit_en
  3105 ;;		_lcd_send_4bit_en
  3106 ;;		_led_turn_on
  3107 ;;		_led_turn_off
  3108 ;;		_seven_segment_write_number
  3109 ;;		_Keypad_get_value
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text19
  3114   001654                     __ptext19:
  3115                           	callstack 0
  3116   001654                     _gpio_pin_write_logic:
  3117                           	callstack 27
  3118   001654                     
  3119                           ;MCAL_layer/GPIO/hal_gpio.c: 82:     Std_ReturnType ret = (Std_ReturnType)0x01;
  3120   001654  0E01               	movlw	1
  3121   001656  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
  3122   001658                     
  3123                           ;MCAL_layer/GPIO/hal_gpio.c: 83:     if (((void*)0) == _pin_config || _pin_config-> pin 
      +                          > 8 -1) {
  3124   001658  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3125   00165A  1002               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
  3126   00165C  B4D8               	btfsc	status,2,c
  3127   00165E  EF33  F00B         	goto	u941
  3128   001662  EF35  F00B         	goto	u940
  3129   001666                     u941:
  3130   001666  EF46  F00B         	goto	l2047
  3131   00166A                     u940:
  3132   00166A  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3133   00166E  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3134   001672  30DF               	rrcf	223,w,c
  3135   001674  32E8               	rrcf	wreg,f,c
  3136   001676  32E8               	rrcf	wreg,f,c
  3137   001678  0B07               	andlw	7
  3138   00167A  6E04               	movwf	??_gpio_pin_write_logic^0,c
  3139   00167C  0E07               	movlw	7
  3140   00167E  6404               	cpfsgt	??_gpio_pin_write_logic^0,c
  3141   001680  EF44  F00B         	goto	u951
  3142   001684  EF46  F00B         	goto	u950
  3143   001688                     u951:
  3144   001688  EFA9  F00B         	goto	l2055
  3145   00168C                     u950:
  3146   00168C                     l2047:
  3147                           
  3148                           ;MCAL_layer/GPIO/hal_gpio.c: 84:         ret = (Std_ReturnType)0x00;
  3149   00168C  0E00               	movlw	0
  3150   00168E  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
  3151                           
  3152                           ;MCAL_layer/GPIO/hal_gpio.c: 85:     }
  3153   001690  EFBE  F00B         	goto	l2057
  3154   001694                     l2049:
  3155                           
  3156                           ;MCAL_layer/GPIO/hal_gpio.c: 89:                 (*lat_register[_pin_config->port] &= ~(
      +                          (uint8_t)1<<_pin_config->pin));
  3157   001694  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3158   001698  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3159   00169C  30DF               	rrcf	223,w,c
  3160   00169E  32E8               	rrcf	wreg,f,c
  3161   0016A0  32E8               	rrcf	wreg,f,c
  3162   0016A2  0B07               	andlw	7
  3163   0016A4  6E04               	movwf	??_gpio_pin_write_logic^0,c
  3164   0016A6  0E01               	movlw	1
  3165   0016A8  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3166   0016AA  2A04               	incf	??_gpio_pin_write_logic^0,f,c
  3167   0016AC  EF5A  F00B         	goto	u964
  3168   0016B0                     u965:
  3169   0016B0  90D8               	bcf	status,0,c
  3170   0016B2  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3171   0016B4                     u964:
  3172   0016B4  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
  3173   0016B6  EF58  F00B         	goto	u965
  3174   0016BA  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3175   0016BC  0AFF               	xorlw	255
  3176   0016BE  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3177   0016C0  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3178   0016C4  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3179   0016C8  50DF               	movf	223,w,c
  3180   0016CA  0B07               	andlw	7
  3181   0016CC  6E07               	movwf	(??_gpio_pin_write_logic+3)^0,c
  3182   0016CE  5007               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  3183   0016D0  0D02               	mullw	2
  3184   0016D2  0E60               	movlw	low _lat_register
  3185   0016D4  24F3               	addwf	243,w,c
  3186   0016D6  6ED9               	movwf	fsr2l,c
  3187   0016D8  0E00               	movlw	high _lat_register
  3188   0016DA  20F4               	addwfc	prodh,w,c
  3189   0016DC  6EDA               	movwf	fsr2h,c
  3190   0016DE  CFDE F008          	movff	postinc2,??_gpio_pin_write_logic+4
  3191   0016E2  CFDD F009          	movff	postdec2,??_gpio_pin_write_logic+5
  3192   0016E6  C008  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  3193   0016EA  C009  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  3194   0016EE  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3195   0016F0  16DF               	andwf	indf2,f,c
  3196                           
  3197                           ;MCAL_layer/GPIO/hal_gpio.c: 90:                 break;
  3198   0016F2  EFBE  F00B         	goto	l2057
  3199   0016F6                     l2051:
  3200                           
  3201                           ;MCAL_layer/GPIO/hal_gpio.c: 92:                 (*lat_register[_pin_config->port] |= ((
      +                          uint8_t)1<<_pin_config->pin));
  3202   0016F6  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3203   0016FA  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3204   0016FE  30DF               	rrcf	223,w,c
  3205   001700  32E8               	rrcf	wreg,f,c
  3206   001702  32E8               	rrcf	wreg,f,c
  3207   001704  0B07               	andlw	7
  3208   001706  6E04               	movwf	??_gpio_pin_write_logic^0,c
  3209   001708  0E01               	movlw	1
  3210   00170A  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3211   00170C  2A04               	incf	??_gpio_pin_write_logic^0,f,c
  3212   00170E  EF8B  F00B         	goto	u974
  3213   001712                     u975:
  3214   001712  90D8               	bcf	status,0,c
  3215   001714  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3216   001716                     u974:
  3217   001716  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
  3218   001718  EF89  F00B         	goto	u975
  3219   00171C  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3220   001720  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3221   001724  50DF               	movf	223,w,c
  3222   001726  0B07               	andlw	7
  3223   001728  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3224   00172A  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3225   00172C  0D02               	mullw	2
  3226   00172E  0E60               	movlw	low _lat_register
  3227   001730  24F3               	addwf	243,w,c
  3228   001732  6ED9               	movwf	fsr2l,c
  3229   001734  0E00               	movlw	high _lat_register
  3230   001736  20F4               	addwfc	prodh,w,c
  3231   001738  6EDA               	movwf	fsr2h,c
  3232   00173A  CFDE F007          	movff	postinc2,??_gpio_pin_write_logic+3
  3233   00173E  CFDD F008          	movff	postdec2,??_gpio_pin_write_logic+4
  3234   001742  C007  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  3235   001746  C008  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  3236   00174A  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3237   00174C  12DF               	iorwf	indf2,f,c
  3238                           
  3239                           ;MCAL_layer/GPIO/hal_gpio.c: 93:                 break;
  3240   00174E  EFBE  F00B         	goto	l2057
  3241   001752                     l2055:
  3242   001752  5003               	movf	gpio_pin_write_logic@logic^0,w,c
  3243   001754  6E04               	movwf	??_gpio_pin_write_logic^0,c
  3244   001756  6A05               	clrf	(??_gpio_pin_write_logic+1)^0,c
  3245                           
  3246                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3247                           ; Switch size 1, requested type "simple"
  3248                           ; Number of cases is 1, Range of values is 0 to 0
  3249                           ; switch strategies available:
  3250                           ; Name         Instructions Cycles
  3251                           ; simple_byte            4     3 (average)
  3252                           ;	Chosen strategy is simple_byte
  3253   001758  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3254   00175A  0A00               	xorlw	0	; case 0
  3255   00175C  B4D8               	btfsc	status,2,c
  3256   00175E  EFB3  F00B         	goto	l2857
  3257   001762  EF46  F00B         	goto	l2047
  3258   001766                     l2857:
  3259                           
  3260                           ; Switch size 1, requested type "simple"
  3261                           ; Number of cases is 2, Range of values is 0 to 1
  3262                           ; switch strategies available:
  3263                           ; Name         Instructions Cycles
  3264                           ; simple_byte            7     4 (average)
  3265                           ;	Chosen strategy is simple_byte
  3266   001766  5004               	movf	??_gpio_pin_write_logic^0,w,c
  3267   001768  0A00               	xorlw	0	; case 0
  3268   00176A  B4D8               	btfsc	status,2,c
  3269   00176C  EF4A  F00B         	goto	l2049
  3270   001770  0A01               	xorlw	1	; case 1
  3271   001772  B4D8               	btfsc	status,2,c
  3272   001774  EF7B  F00B         	goto	l2051
  3273   001778  EF46  F00B         	goto	l2047
  3274   00177C                     l2057:
  3275                           
  3276                           ;MCAL_layer/GPIO/hal_gpio.c: 98:     return ret;
  3277   00177C  500A               	movf	gpio_pin_write_logic@ret^0,w,c
  3278   00177E  0012               	return		;funcret
  3279   001780                     __end_of_gpio_pin_write_logic:
  3280                           	callstack 0
  3281                           
  3282 ;; *************** function _gpio_pin_direction_initialize *****************
  3283 ;; Defined at:
  3284 ;;		line 27 in file "MCAL_layer/GPIO/hal_gpio.c"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  3287 ;;		 -> lcd4bit.lcd_data(4), lcd4bit(6), lcd8bit.lcd_data(8), lcd8bit(10), 
  3288 ;;		 -> led_intialized@pin_obj(1), 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;  ret             1    8[COMRAM] unsigned char 
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      unsigned char 
  3293 ;; Registers used:
  3294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3300 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3301 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3302 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3303 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3304 ;;Total ram usage:        9 bytes
  3305 ;; Hardware stack levels used: 1
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_gpio_pin_initialize
  3310 ;;		_button_initialize
  3311 ;;		_Keypad_initialize
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           	psect	text20
  3316   001510                     __ptext20:
  3317                           	callstack 0
  3318   001510                     _gpio_pin_direction_initialize:
  3319                           	callstack 26
  3320   001510                     
  3321                           ;MCAL_layer/GPIO/hal_gpio.c: 28:     Std_ReturnType ret = (Std_ReturnType)0x01;
  3322   001510  0E01               	movlw	1
  3323   001512  6E09               	movwf	gpio_pin_direction_initialize@ret^0,c
  3324   001514                     
  3325                           ;MCAL_layer/GPIO/hal_gpio.c: 30:     if (((void*)0) == _pin_config || _pin_config-> pin 
      +                          > 8 -1) {
  3326   001514  5001               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  3327   001516  1002               	iorwf	(gpio_pin_direction_initialize@_pin_config+1)^0,w,c
  3328   001518  B4D8               	btfsc	status,2,c
  3329   00151A  EF91  F00A         	goto	u1021
  3330   00151E  EF93  F00A         	goto	u1020
  3331   001522                     u1021:
  3332   001522  EFA4  F00A         	goto	l2145
  3333   001526                     u1020:
  3334   001526  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  3335   00152A  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  3336   00152E  30DF               	rrcf	223,w,c
  3337   001530  32E8               	rrcf	wreg,f,c
  3338   001532  32E8               	rrcf	wreg,f,c
  3339   001534  0B07               	andlw	7
  3340   001536  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  3341   001538  0E07               	movlw	7
  3342   00153A  6403               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  3343   00153C  EFA2  F00A         	goto	u1031
  3344   001540  EFA4  F00A         	goto	u1030
  3345   001544                     u1031:
  3346   001544  EF07  F00B         	goto	l2153
  3347   001548                     u1030:
  3348   001548                     l2145:
  3349                           
  3350                           ;MCAL_layer/GPIO/hal_gpio.c: 31:         ret = (Std_ReturnType)0x00;
  3351   001548  0E00               	movlw	0
  3352   00154A  6E09               	movwf	gpio_pin_direction_initialize@ret^0,c
  3353                           
  3354                           ;MCAL_layer/GPIO/hal_gpio.c: 32:     }
  3355   00154C  EF28  F00B         	goto	l2155
  3356   001550                     l2147:
  3357                           
  3358                           ;MCAL_layer/GPIO/hal_gpio.c: 36:                 (*tris_register[_pin_config->port] &= ~
      +                          ((uint8_t)1<<_pin_config->pin));
  3359   001550  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  3360   001554  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  3361   001558  30DF               	rrcf	223,w,c
  3362   00155A  32E8               	rrcf	wreg,f,c
  3363   00155C  32E8               	rrcf	wreg,f,c
  3364   00155E  0B07               	andlw	7
  3365   001560  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  3366   001562  0E01               	movlw	1
  3367   001564  6E04               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  3368   001566  2A03               	incf	??_gpio_pin_direction_initialize^0,f,c
  3369   001568  EFB8  F00A         	goto	u1044
  3370   00156C                     u1045:
  3371   00156C  90D8               	bcf	status,0,c
  3372   00156E  3604               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  3373   001570                     u1044:
  3374   001570  2E03               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  3375   001572  EFB6  F00A         	goto	u1045
  3376   001576  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  3377   001578  0AFF               	xorlw	255
  3378   00157A  6E05               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  3379   00157C  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  3380   001580  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  3381   001584  50DF               	movf	223,w,c
  3382   001586  0B07               	andlw	7
  3383   001588  6E06               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  3384   00158A  5006               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  3385   00158C  0D02               	mullw	2
  3386   00158E  0E8A               	movlw	low _tris_register
  3387   001590  24F3               	addwf	243,w,c
  3388   001592  6ED9               	movwf	fsr2l,c
  3389   001594  0E00               	movlw	high _tris_register
  3390   001596  20F4               	addwfc	prodh,w,c
  3391   001598  6EDA               	movwf	fsr2h,c
  3392   00159A  CFDE F007          	movff	postinc2,??_gpio_pin_direction_initialize+4
  3393   00159E  CFDD F008          	movff	postdec2,??_gpio_pin_direction_initialize+5
  3394   0015A2  C007  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  3395   0015A6  C008  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  3396   0015AA  5005               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  3397   0015AC  16DF               	andwf	indf2,f,c
  3398                           
  3399                           ;MCAL_layer/GPIO/hal_gpio.c: 37:                 break;
  3400   0015AE  EF28  F00B         	goto	l2155
  3401   0015B2                     l2149:
  3402                           
  3403                           ;MCAL_layer/GPIO/hal_gpio.c: 39:                 (*tris_register[_pin_config->port] |= (
      +                          (uint8_t)1<<_pin_config->pin));
  3404   0015B2  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  3405   0015B6  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  3406   0015BA  30DF               	rrcf	223,w,c
  3407   0015BC  32E8               	rrcf	wreg,f,c
  3408   0015BE  32E8               	rrcf	wreg,f,c
  3409   0015C0  0B07               	andlw	7
  3410   0015C2  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  3411   0015C4  0E01               	movlw	1
  3412   0015C6  6E04               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  3413   0015C8  2A03               	incf	??_gpio_pin_direction_initialize^0,f,c
  3414   0015CA  EFE9  F00A         	goto	u1054
  3415   0015CE                     u1055:
  3416   0015CE  90D8               	bcf	status,0,c
  3417   0015D0  3604               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  3418   0015D2                     u1054:
  3419   0015D2  2E03               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  3420   0015D4  EFE7  F00A         	goto	u1055
  3421   0015D8  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  3422   0015DC  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  3423   0015E0  50DF               	movf	223,w,c
  3424   0015E2  0B07               	andlw	7
  3425   0015E4  6E05               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  3426   0015E6  5005               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  3427   0015E8  0D02               	mullw	2
  3428   0015EA  0E8A               	movlw	low _tris_register
  3429   0015EC  24F3               	addwf	243,w,c
  3430   0015EE  6ED9               	movwf	fsr2l,c
  3431   0015F0  0E00               	movlw	high _tris_register
  3432   0015F2  20F4               	addwfc	prodh,w,c
  3433   0015F4  6EDA               	movwf	fsr2h,c
  3434   0015F6  CFDE F006          	movff	postinc2,??_gpio_pin_direction_initialize+3
  3435   0015FA  CFDD F007          	movff	postdec2,??_gpio_pin_direction_initialize+4
  3436   0015FE  C006  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  3437   001602  C007  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  3438   001606  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  3439   001608  12DF               	iorwf	indf2,f,c
  3440                           
  3441                           ;MCAL_layer/GPIO/hal_gpio.c: 40:                 break;
  3442   00160A  EF28  F00B         	goto	l2155
  3443   00160E                     l2153:
  3444   00160E  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  3445   001612  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  3446   001616  BCDF               	btfsc	indf2,6,c
  3447   001618  EF10  F00B         	goto	u1061
  3448   00161C  EF13  F00B         	goto	u1060
  3449   001620                     u1061:
  3450   001620  0E01               	movlw	1
  3451   001622  EF14  F00B         	goto	u1070
  3452   001626                     u1060:
  3453   001626  0E00               	movlw	0
  3454   001628                     u1070:
  3455   001628  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  3456   00162A  6A04               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  3457                           
  3458                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3459                           ; Switch size 1, requested type "simple"
  3460                           ; Number of cases is 1, Range of values is 0 to 0
  3461                           ; switch strategies available:
  3462                           ; Name         Instructions Cycles
  3463                           ; simple_byte            4     3 (average)
  3464                           ;	Chosen strategy is simple_byte
  3465   00162C  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  3466   00162E  0A00               	xorlw	0	; case 0
  3467   001630  B4D8               	btfsc	status,2,c
  3468   001632  EF1D  F00B         	goto	l2859
  3469   001636  EFA4  F00A         	goto	l2145
  3470   00163A                     l2859:
  3471                           
  3472                           ; Switch size 1, requested type "simple"
  3473                           ; Number of cases is 2, Range of values is 0 to 1
  3474                           ; switch strategies available:
  3475                           ; Name         Instructions Cycles
  3476                           ; simple_byte            7     4 (average)
  3477                           ;	Chosen strategy is simple_byte
  3478   00163A  5003               	movf	??_gpio_pin_direction_initialize^0,w,c
  3479   00163C  0A00               	xorlw	0	; case 0
  3480   00163E  B4D8               	btfsc	status,2,c
  3481   001640  EFA8  F00A         	goto	l2147
  3482   001644  0A01               	xorlw	1	; case 1
  3483   001646  B4D8               	btfsc	status,2,c
  3484   001648  EFD9  F00A         	goto	l2149
  3485   00164C  EFA4  F00A         	goto	l2145
  3486   001650                     l2155:
  3487                           
  3488                           ;MCAL_layer/GPIO/hal_gpio.c: 44:     return ret;
  3489   001650  5009               	movf	gpio_pin_direction_initialize@ret^0,w,c
  3490   001652  0012               	return		;funcret
  3491   001654                     __end_of_gpio_pin_direction_initialize:
  3492                           	callstack 0
  3493                           
  3494                           	psect	rparam
  3495   000000                     
  3496                           	psect	idloc
  3497                           
  3498                           ;Config register IDLOC0 @ 0x200000
  3499                           ;	unspecified, using default values
  3500   200000                     	org	2097152
  3501   200000  FF                 	db	255
  3502                           
  3503                           ;Config register IDLOC1 @ 0x200001
  3504                           ;	unspecified, using default values
  3505   200001                     	org	2097153
  3506   200001  FF                 	db	255
  3507                           
  3508                           ;Config register IDLOC2 @ 0x200002
  3509                           ;	unspecified, using default values
  3510   200002                     	org	2097154
  3511   200002  FF                 	db	255
  3512                           
  3513                           ;Config register IDLOC3 @ 0x200003
  3514                           ;	unspecified, using default values
  3515   200003                     	org	2097155
  3516   200003  FF                 	db	255
  3517                           
  3518                           ;Config register IDLOC4 @ 0x200004
  3519                           ;	unspecified, using default values
  3520   200004                     	org	2097156
  3521   200004  FF                 	db	255
  3522                           
  3523                           ;Config register IDLOC5 @ 0x200005
  3524                           ;	unspecified, using default values
  3525   200005                     	org	2097157
  3526   200005  FF                 	db	255
  3527                           
  3528                           ;Config register IDLOC6 @ 0x200006
  3529                           ;	unspecified, using default values
  3530   200006                     	org	2097158
  3531   200006  FF                 	db	255
  3532                           
  3533                           ;Config register IDLOC7 @ 0x200007
  3534                           ;	unspecified, using default values
  3535   200007                     	org	2097159
  3536   200007  FF                 	db	255
  3537                           
  3538                           	psect	config
  3539                           
  3540                           ; Padding undefined space
  3541   300000                     	org	3145728
  3542   300000  FF                 	db	255
  3543                           
  3544                           ;Config register CONFIG1H @ 0x300001
  3545                           ;	Oscillator Selection bits
  3546                           ;	OSC = HS, HS oscillator
  3547                           ;	Fail-Safe Clock Monitor Enable bit
  3548                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3549                           ;	Internal/External Oscillator Switchover bit
  3550                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3551   300001                     	org	3145729
  3552   300001  02                 	db	2
  3553                           
  3554                           ;Config register CONFIG2L @ 0x300002
  3555                           ;	Power-up Timer Enable bit
  3556                           ;	PWRT = OFF, PWRT disabled
  3557                           ;	Brown-out Reset Enable bits
  3558                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3559                           ;	Brown Out Reset Voltage bits
  3560                           ;	BORV = 1, 
  3561   300002                     	org	3145730
  3562   300002  09                 	db	9
  3563                           
  3564                           ;Config register CONFIG2H @ 0x300003
  3565                           ;	Watchdog Timer Enable bit
  3566                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3567                           ;	Watchdog Timer Postscale Select bits
  3568                           ;	WDTPS = 32768, 1:32768
  3569   300003                     	org	3145731
  3570   300003  1E                 	db	30
  3571                           
  3572                           ; Padding undefined space
  3573   300004                     	org	3145732
  3574   300004  FF                 	db	255
  3575                           
  3576                           ;Config register CONFIG3H @ 0x300005
  3577                           ;	CCP2 MUX bit
  3578                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3579                           ;	PORTB A/D Enable bit
  3580                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3581                           ;	Low-Power Timer1 Oscillator Enable bit
  3582                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3583                           ;	MCLR Pin Enable bit
  3584                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3585   300005                     	org	3145733
  3586   300005  81                 	db	129
  3587                           
  3588                           ;Config register CONFIG4L @ 0x300006
  3589                           ;	Stack Full/Underflow Reset Enable bit
  3590                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3591                           ;	Single-Supply ICSP Enable bit
  3592                           ;	LVP = OFF, Single-Supply ICSP disabled
  3593                           ;	Extended Instruction Set Enable bit
  3594                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3595                           ;	Background Debugger Enable bit
  3596                           ;	DEBUG = 0x1, unprogrammed default
  3597   300006                     	org	3145734
  3598   300006  81                 	db	129
  3599                           
  3600                           ; Padding undefined space
  3601   300007                     	org	3145735
  3602   300007  FF                 	db	255
  3603                           
  3604                           ;Config register CONFIG5L @ 0x300008
  3605                           ;	Code Protection bit
  3606                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3607                           ;	Code Protection bit
  3608                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3609                           ;	Code Protection bit
  3610                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3611                           ;	Code Protection bit
  3612                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3613   300008                     	org	3145736
  3614   300008  0F                 	db	15
  3615                           
  3616                           ;Config register CONFIG5H @ 0x300009
  3617                           ;	Boot Block Code Protection bit
  3618                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3619                           ;	Data EEPROM Code Protection bit
  3620                           ;	CPD = OFF, Data EEPROM not code-protected
  3621   300009                     	org	3145737
  3622   300009  C0                 	db	192
  3623                           
  3624                           ;Config register CONFIG6L @ 0x30000A
  3625                           ;	Write Protection bit
  3626                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3627                           ;	Write Protection bit
  3628                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3629                           ;	Write Protection bit
  3630                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3631                           ;	Write Protection bit
  3632                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3633   30000A                     	org	3145738
  3634   30000A  0F                 	db	15
  3635                           
  3636                           ;Config register CONFIG6H @ 0x30000B
  3637                           ;	Configuration Register Write Protection bit
  3638                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3639                           ;	Boot Block Write Protection bit
  3640                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3641                           ;	Data EEPROM Write Protection bit
  3642                           ;	WRTD = OFF, Data EEPROM not write-protected
  3643   30000B                     	org	3145739
  3644   30000B  E0                 	db	224
  3645                           
  3646                           ;Config register CONFIG7L @ 0x30000C
  3647                           ;	Table Read Protection bit
  3648                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3649                           ;	Table Read Protection bit
  3650                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3651                           ;	Table Read Protection bit
  3652                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3653                           ;	Table Read Protection bit
  3654                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3655   30000C                     	org	3145740
  3656   30000C  0F                 	db	15
  3657                           
  3658                           ;Config register CONFIG7H @ 0x30000D
  3659                           ;	Boot Block Table Read Protection bit
  3660                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3661   30000D                     	org	3145741
  3662   30000D  40                 	db	64
  3663                           tosu	equ	0xFFF
  3664                           tosh	equ	0xFFE
  3665                           tosl	equ	0xFFD
  3666                           stkptr	equ	0xFFC
  3667                           pclatu	equ	0xFFB
  3668                           pclath	equ	0xFFA
  3669                           pcl	equ	0xFF9
  3670                           tblptru	equ	0xFF8
  3671                           tblptrh	equ	0xFF7
  3672                           tblptrl	equ	0xFF6
  3673                           tablat	equ	0xFF5
  3674                           prodh	equ	0xFF4
  3675                           prodl	equ	0xFF3
  3676                           indf0	equ	0xFEF
  3677                           postinc0	equ	0xFEE
  3678                           postdec0	equ	0xFED
  3679                           preinc0	equ	0xFEC
  3680                           plusw0	equ	0xFEB
  3681                           fsr0h	equ	0xFEA
  3682                           fsr0l	equ	0xFE9
  3683                           wreg	equ	0xFE8
  3684                           indf1	equ	0xFE7
  3685                           postinc1	equ	0xFE6
  3686                           postdec1	equ	0xFE5
  3687                           preinc1	equ	0xFE4
  3688                           plusw1	equ	0xFE3
  3689                           fsr1h	equ	0xFE2
  3690                           fsr1l	equ	0xFE1
  3691                           bsr	equ	0xFE0
  3692                           indf2	equ	0xFDF
  3693                           postinc2	equ	0xFDE
  3694                           postdec2	equ	0xFDD
  3695                           preinc2	equ	0xFDC
  3696                           plusw2	equ	0xFDB
  3697                           fsr2h	equ	0xFDA
  3698                           fsr2l	equ	0xFD9
  3699                           status	equ	0xFD8

Data Sizes:
    Strings     43
    Constant    16
    Data        94
    BSS         4
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     95     126
    BANK0           128      0      68
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    S1219$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1219$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    lcd_4bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd4bit(COMRAM[6]), 

    lcd_8bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd8bit(COMRAM[10]), 

    lcd_send_4bit_en@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd4bit(COMRAM[6]), 

    lcd_send_8bit_en@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd8bit(COMRAM[10]), 

    lcd_send_4bit@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd4bit(COMRAM[6]), 

    sp__memset	PTR void  size(2) Largest target is 0

    lcd_8bit_send_custom_char@chr	PTR const unsigned char  size(2) Largest target is 8
		 -> main@customChar6(COMRAM[8]), main@customChar5(COMRAM[8]), main@customChar4(COMRAM[8]), main@customChar3(COMRAM[8]), 
		 -> main@customChar2(COMRAM[8]), main@customChar1(COMRAM[8]), 

    lcd_8bit_send_custom_char@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd8bit(COMRAM[10]), 

    lcd_8bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 14
		 -> STR_9(CODE[14]), STR_8(CODE[8]), STR_5(CODE[8]), STR_4(CODE[2]), 
		 -> STR_3(CODE[8]), STR_2(CODE[14]), STR_1(CODE[8]), 

    lcd_8bit_send_string_pos@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd8bit(COMRAM[10]), 

    lcd_8bit_send_char_data_pos@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd8bit(COMRAM[10]), 

    lcd_8bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd8bit(COMRAM[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd8bit(COMRAM[10]), 

    lcd_8bit_initialize@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd8bit(COMRAM[10]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[14]), STR_6(CODE[8]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd4bit(COMRAM[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd4bit(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd4bit(COMRAM[6]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd4bit(COMRAM[6]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd4bit.lcd_data(COMRAM[4]), lcd4bit(COMRAM[6]), lcd8bit.lcd_data(COMRAM[8]), lcd8bit(COMRAM[10]), 
		 -> led_intialized@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd4bit.lcd_data(COMRAM[4]), lcd4bit(COMRAM[6]), lcd8bit.lcd_data(COMRAM[8]), lcd8bit(COMRAM[10]), 
		 -> led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), led_intialized@pin_obj(COMRAM[1]), 

    gpio_pin_direction_initialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd4bit.lcd_data(COMRAM[4]), lcd4bit(COMRAM[6]), lcd8bit.lcd_data(COMRAM[8]), lcd8bit(COMRAM[10]), 
		 -> led_intialized@pin_obj(COMRAM[1]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 


Critical Paths under _main in COMRAM

    _lcd_8bit_send_custom_char->_lcd_8bit_send_char_data_pos
    _lcd_8bit_send_char_data_pos->_lcd_8bit_set_cursor
    _ecu_layer_intialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_string_pos
    _lcd_8bit_send_string_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_send_8bit_en
    _lcd_8bit_send_char_data->_lcd_send_8bit_en
    _lcd_send_8bit_en->_gpio_pin_write_logic
    _lcd_4bit_initialize->_lcd_4bit_send_string_pos
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bit
    _lcd_4bit_send_char_data->_lcd_send_4bit
    _lcd_send_4bit_en->_gpio_pin_write_logic
    _lcd_send_4bit->_gpio_pin_write_logic
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                54    54      0  131121
                                             46 COMRAM    49    49      0
             _application_initialize
          _lcd_8bit_send_custom_char
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_custom_char                           10     3      7   42205
                                             35 COMRAM    10     3      7
            _lcd_8bit_send_char_data
        _lcd_8bit_send_char_data_pos
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char_data_pos                          6     1      5   20388
                                             29 COMRAM     6     1      5
            _lcd_8bit_send_char_data
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0   88771
                _ecu_layer_intialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_intialize                                  1     1      0   88771
                _lcd_4bit_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_initialize                                  6     4      2   38828
                                             40 COMRAM     6     4      2
                _gpio_pin_initialize
              _lcd_8bit_send_command
           _lcd_8bit_send_string_pos
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_string_pos                            11     5      6   22302
                                             29 COMRAM    11     5      6
            _lcd_8bit_send_char_data
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_set_cursor                                  7     3      4   11520
                                             22 COMRAM     7     3      4
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_command                                9     6      3   10838
                                             13 COMRAM     9     6      3
               _gpio_pin_write_logic
                   _lcd_send_8bit_en
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_char_data                              9     6      3    8406
                                             13 COMRAM     9     6      3
               _gpio_pin_write_logic
                   _lcd_send_8bit_en
 ---------------------------------------------------------------------------------
 (3) _lcd_send_8bit_en                                     3     1      2    3896
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  7     5      2   49940
                                             36 COMRAM     7     5      2
                _gpio_pin_initialize
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_string_pos                            11     5      6   29406
                                             25 COMRAM    11     5      6
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (5) _lcd_4bit_set_cursor                                  7     3      4   15528
                                             18 COMRAM     7     3      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (6) _lcd_4bit_send_command                                4     1      3   14846
                                             14 COMRAM     4     1      3
               _gpio_pin_write_logic
                      _lcd_send_4bit
                   _lcd_send_4bit_en
 ---------------------------------------------------------------------------------
 (5) _lcd_4bit_send_char_data                              4     1      3   13022
                                             14 COMRAM     4     1      3
               _gpio_pin_write_logic
                      _lcd_send_4bit
                   _lcd_send_4bit_en
 ---------------------------------------------------------------------------------
 (7) _lcd_send_4bit_en                                     3     1      2    4048
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (7) _lcd_send_4bit                                        4     1      3    4486
                                             10 COMRAM     4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  4     2      2    5130
                                             10 COMRAM     4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_write_logic                                10     7      3    3675
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        9     7      2     407
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _ecu_layer_intialize
       _lcd_4bit_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_send_4bit
             _gpio_pin_write_logic
           _lcd_send_4bit_en
             _gpio_pin_write_logic
         _lcd_4bit_send_string_pos
           _lcd_4bit_send_char_data
             _gpio_pin_write_logic
             _lcd_send_4bit
             _lcd_send_4bit_en
           _lcd_4bit_set_cursor
             _lcd_4bit_send_command
       _lcd_8bit_initialize
         _gpio_pin_initialize
         _lcd_8bit_send_command
           _gpio_pin_write_logic
           _lcd_send_8bit_en
             _gpio_pin_write_logic
         _lcd_8bit_send_string_pos
           _lcd_8bit_send_char_data
             _gpio_pin_write_logic
             _lcd_send_8bit_en
           _lcd_8bit_set_cursor
             _lcd_8bit_send_command
   _lcd_8bit_send_custom_char
     _lcd_8bit_send_char_data
     _lcd_8bit_send_char_data_pos
       _lcd_8bit_send_char_data
       _lcd_8bit_set_cursor
     _lcd_8bit_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      44       5       53.1%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     5F      7E       1       99.2%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C2      39        0.0%
DATA                 0      0      C2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun May 28 01:45:10 2023

                          ?_lcd_send_4bit 000B                                        l82 1652  
                                     l101 177E                                       l122 1D14  
                                     l320 1C36                                       l410 1AAC  
                                     l315 11E2                                       l403 1974  
                                     l325 1CA8                                       l350 1A1A  
                                     l190 1EFE                                       l431 1E8E  
                                     l280 1EF8                                       l434 1EC4  
                                     l371 1B38                                       l428 1D7C  
                                     l444 1826                                       l364 150E  
                                     l454 18CE                                       l383 1E14  
                                     l378 1BC4                                       u940 166A  
                                     u941 1666                                       u950 168C  
                                     u951 1688                                       u964 16B4  
                                     u980 1AC0                                       u965 16B0  
                                     u981 1ABC                                       u974 1716  
                                     u975 1712                                       u994 1B06  
                                     u995 1B02                                       _ret 007E  
                                     prod 0FF3                 ?_lcd_8bit_send_string_pos 001E  
                                     wreg 0FE8               __end_of_lcd_8bit_set_cursor 1828  
                       ?_lcd_send_4bit_en 000B                         ?_lcd_send_8bit_en 000B  
                                    l2101 1AAE                                      l2103 1AAE  
                      ??_lcd_send_4bit_en 000D                                      l2041 1654  
                                    l2201 1B4C                                      l2121 1B28  
                                    l2105 1AC0                                      l2051 16F6  
                                    l2043 1658                                      l2131 1BD8  
                                    l2211 1B68                                      l2203 1B54  
                                    l2115 1ADC                                      l2123 1B36  
                                    l2107 1AC8                                      l2141 1514  
                                    l2045 166A                                      l2133 1BE0  
                                    l2301 1A18                                      l2213 1BA2  
                                    l2205 1B64                                      l2117 1B16  
                                    l2109 1AD8                                      l2143 1526  
                                    l2055 1752                                      l2047 168C  
                                    l2071 1D44                                      l2135 1C34  
                                    l2127 1BC6                                      l2311 1058  
                                    l2215 1BA4                                      l2119 1B18  
                                    l2231 17BA                                      l2223 1780  
                                    l2153 160E                                      l2145 1548  
                                    l2049 1694                                      l2057 177C  
                                    l2073 1D5E                                      l2065 1D16  
                                    l2081 1EA4                                      l2129 1BC6  
                                    l2321 109C                                      l2313 1078  
                                    l2305 103E                                      l2217 1BB4  
                                    l2233 17D2                                      l2225 1784  
                                    l2401 149A                                      l2147 1550  
                                    l2155 1650                                      l2139 1510  
                                    l2251 1CBC                                      l2067 1D16  
                                    l2083 1EAC                                      l2171 1CA6  
                                    l2163 1C38                                      l2331 10F8  
                                    l2323 10A0                                      l2307 103E  
                                    l2091 1E5A                                      l2219 1BC2  
                                    l2227 178A                                      l2403 14B6  
                                    l2149 15B2                                      l2253 1CDE  
                                    l2069 1D2C                                      l2085 1EC2  
                                    l2077 1E90                                      l2165 1C38  
                                    l2181 184A                                      l2341 113E  
                                    l2333 10FE                                      l2325 10BC  
                                    l2309 1050                                      l2093 1E6E  
                                    l2229 17A2                                      l2237 17EA  
                                    l2261 18D0                                      l2405 14EA  
                                    l2413 1EE0                                      l2421 1DD0  
                                    l2255 1CE6                                      l2247 1CAA  
                                    l2079 1E90                                      l2167 1C4A  
                                    l2183 1862                                      l2175 1828  
                                    l2351 11BE                                      l2343 114E  
                                    l2335 110E                                      l2327 10CA  
                                    l2319 1080                                      l2095 1E76  
                                    l2239 1824                                      l2271 1912  
                                    l2263 18D0                                      l2407 14FA  
                                    l2415 1EE0                                      l2423 1DE2  
                                    l2257 1D12                                      l2249 1CAA  
                                    l2169 1C52                                      l2185 187A  
                                    l2177 182C                                      l2353 11CE  
                                    l2345 115E                                      l2337 111E  
                                    l2329 10DA                                      l2097 1E8C  
                                    l2089 1E5A                                      l2273 191E  
                                    l2265 18E2                                      l2409 150C  
                                    l2361 137C                                      l2417 1EEC  
                                    l2425 1DEA                                      l2601 1344  
                                    l2179 1832                                      l2187 1892  
                                    l2291 19A2                                      l2283 1976  
                                    l2347 116E                                      l2339 112E  
                                    l2355 11E0                                      l2275 1946  
                                    l2267 18F4                                      l2363 138E  
                                    l2427 1E12                                      l2419 1DD0  
                                    l2451 1A1C                                      l2603 1366  
                                    l2189 18CC                                      l2293 19B8  
                                    l2285 1976                                      l2349 118A  
                                    l2197 1B3A                                      l2277 194A  
                                    l2269 18FC                                      l2381 13F6  
                                    l2373 13BA                                      l2365 1396  
                                    l2453 1A2E                                      l2295 19C4  
                                    l2287 1988                                      l2199 1B3A  
                                    l2279 1972                                      l2391 144A  
                                    l2383 1406                                      l2375 13D6  
                                    l2367 13B6                                      l2359 137C  
                                    l2447 1EFA                                      l2463 1A54  
                                    l2471 1AAA                                      l2455 1A36  
                                    l2297 19EC                                      l2289 199A  
                                    l2393 145A                                      l2385 1424  
                                    l2377 13D8                                      l2465 1A70  
                                    l2457 1A4C                                      l2449 1A1C  
                                    l2299 19F0                                      l2395 146A  
                                    l2387 142A                                      l2379 13E8  
                                    l2467 1A74                                      l2571 11FA  
                                    l2397 147A                                      l2389 143A  
                                    l2469 1A90                                      l2581 1254  
                                    l2573 120C                                      l2565 11E4  
                                    l2399 148A                                      l2591 12D6  
                                    l2583 1276                                      l2575 121E  
                                    l2567 11E4                                      l2593 12E4  
                                    l2585 1284                                      l2577 1230  
                                    l2569 11E8                                      l2595 1306  
                                    l2587 12A6                                      l2579 1242  
                                    l2853 17FE                                      l2597 1314  
                                    l2589 12B4                                      l2855 18A6  
                                    l2599 1336                                      l2857 1766  
                                    l2859 163A                                      STR_1 1027  
                                    STR_2 1011                                      STR_3 102F  
                                    STR_4 103A                                      STR_5 101F  
                                    STR_6 1027                                      STR_7 1011  
                                    STR_8 1027                                      STR_9 1011  
                                    u1000 1B28                                      u1001 1B24  
                                    u1010 1BD8                                      u1011 1BD4  
                                    u1020 1526                                      u1021 1522  
                                    u1030 1548                                      u1110 1BB4  
                                    u1031 1544                                      u1111 1BB0  
                                    u1120 1CBC                                      u1200 1050  
                                    u1104 1B92                                      u1121 1CB8  
                                    u1201 104C                                      u1105 1B8E  
                                    u1130 1CDE                                      u1210 10BC  
                                    u1131 1CDA                                      u1211 10B8  
                                    u1060 1626                                      u1044 1570  
                                    u1140 18E2                                      u1220 138E  
                                    u1300 1A90                                      u1061 1620  
                                    u1045 156C                                      u1141 18DE  
                                    u1221 138A                                      u1301 1A8C  
                                    u1070 1628                                      u1054 15D2  
                                    u1150 18F4                                      u1230 13E8  
                                    u1055 15CE                                      u1151 18F0  
                                    u1231 13E4                                      u1080 1C4A  
                                    u1160 1972                                      u1240 1DE2  
                                    u1081 1C46                                      u1161 196E  
                                    u1241 1DDE                                      u1170 1988  
                                    u1090 1B4C                                      u1171 1984  
                                    u1091 1B48                                      u1180 199A  
                                    u1181 1996                                      u1421 11F2  
                                    _LATA 0F89                                      u1190 1A18  
                                    _LATB 0F8A                                      u1191 1A14  
                                    u1431 1204                                      _LATC 0F8B  
                                    _LATD 0F8C                                      u1441 1216  
                                    _LATE 0F8D                                      u1290 1A2E  
                                    u1291 1A2A                                      u1451 1228  
                                    u1461 123A                                      u1471 124C  
                                    u1807 133C                                      u1817 136C  
                                    u1907 11B0                                      u1827 13EE  
                                    u1917 1EA6                                      u1837 140C  
                                    u1847 1426                                      u1767 127C  
                                    u1857 14DC                                      u1777 12AC  
                                    u1867 1E70                                      u1787 12DC  
                                    u1877 10C2                                      u1797 130C  
                                    u1887 10E0                                      u1897 10FA  
                      ??_lcd_send_8bit_en 000D                                      _main 11E4  
                                    fsr2h 0FDA                                      indf2 0FDF  
                                    fsr1l 0FE1                                      fsr2l 0FD9  
                                    prodl 0FF3                                      start 0000  
      lcd_8bit_send_char_data@pin_counter 0016                lcd_8bit_initialize@counter 002D  
           __end_of_lcd_8bit_send_command 1B3A                              ___param_bank 0000  
                   _lcd_4bit_send_command 1BC6                      _gpio_pin_write_logic 1654  
          lcd_4bit_send_string_pos@column 001D                                     ?_main 0001  
                ??_application_initialize 002F                                     STR_10 1037  
                                   _PORTA 0F80                                     _PORTB 0F81  
                                   _PORTC 0F82                                     _PORTD 0F83  
                                   _PORTE 0F84                                     _TRISA 0F92  
                                   _TRISB 0F93                                     _TRISC 0F94  
                                   _TRISD 0F95                                     _TRISE 0F96  
             ??_lcd_8bit_send_custom_char 002B                  ?_lcd_8bit_send_char_data 000E  
     __end_of_lcd_8bit_send_char_data_pos 1E16               _lcd_8bit_send_char_data_pos 1DD0  
                                   tablat 0FF5                                     plusw1 0FE3  
                                   plusw2 0FDB                                     status 0FD8  
          ?_gpio_pin_direction_initialize 0001             ??_lcd_8bit_send_char_data_pos 0023  
                         ??_lcd_send_4bit 000E                           __initialization 1D7E  
                            __end_of_main 137C                     ?_gpio_pin_write_logic 0001  
                  lcd_8bit_set_cursor@lcd 0017                    lcd_8bit_set_cursor@ret 001D  
                  lcd_8bit_set_cursor@row 0019                                    ??_main 002F  
                           __activetblptr 0002                          led_turn_on@F3048 007C  
                           _tris_register 008A                 _lcd_8bit_send_custom_char 1A1C  
        __end_of_lcd_4bit_send_string_pos 1A1C                    ?_lcd_4bit_send_command 000F  
  lcd_8bit_send_string_pos@string_counter 0027    lcd_4bit_send_string_pos@string_counter 0023  
                                  isa$std 0001                          lcd_send_4bit@lcd 000B  
                        lcd_send_4bit@ret 000E            lcd_8bit_send_char_data_pos@lcd 001E  
          lcd_8bit_send_char_data_pos@ret 0023               lcd_8bit_send_string_pos@lcd 001E  
          lcd_8bit_send_char_data_pos@row 0020               lcd_8bit_send_string_pos@ret 0026  
             lcd_8bit_send_string_pos@row 0020               lcd_8bit_send_string_pos@str 0022  
                            __pdataCOMRAM 0060                              __mediumconst 0000  
                                  tblptrh 0FF7                                    tblptrl 0FF6  
                                  tblptru 0FF8                                __accesstop 0080  
                 __end_of__initialization 1DC6                             ___rparam_used 0001  
                 _lcd_4bit_send_char_data 1C38           lcd_8bit_send_custom_char@column 0027  
                  ??_gpio_pin_write_logic 0004                            __pcstackCOMRAM 0001  
                            __pidataBANK0 1E16                  lcd_4bit_send_command@lcd 000F  
                lcd_4bit_send_command@ret 0012  gpio_pin_direction_initialize@_pin_config 0001  
                  _application_initialize 1EFA                                __pnvCOMRAM 007E  
                  lcd_8bit_initialize@lcd 0029                    lcd_8bit_initialize@ret 002E  
                       led_turn_off@F3053 007B                           led_toggle@F3058 007A  
               ?_lcd_4bit_send_string_pos 001A                 ??_lcd_4bit_send_char_data 0012  
                                 __Hparam 0000                                   __Lparam 0000  
                     _ecu_layer_intialize 1EE0                       _gpio_pin_initialize 1CAA  
                   _lcd_8bit_send_command 1AAE                         __end_of_btn_value 1011  
                            __psmallconst 1000                                   _lcd4bit 0074  
                                 _lcd8bit 006A                                   __pcinit 1D7E  
                                 __ramtop 1000                  _lcd_8bit_send_string_pos 18D0  
                                 __ptext0 11E4                                   __ptext1 1A1C  
                                 __ptext2 1DD0                                   __ptext3 1EFA  
                                 __ptext4 1EE0                                   __ptext5 137C  
                                 __ptext6 18D0                                   __ptext7 1780  
                                 __ptext8 1AAE                                   __ptext9 1B3A  
         ??_gpio_pin_direction_initialize 0003                      ?_ecu_layer_intialize 0001  
                    ?_gpio_pin_initialize 000B           lcd_8bit_send_char_data_pos@data 0022  
                    end_of_initialization 1DC6                             __Lmediumconst 0000  
                 ??_lcd_4bit_send_command 0012                     __end_of_lcd_send_4bit 1D7E  
                                 postdec1 0FE5                                   postdec2 0FDD  
                                 postinc0 0FEE                                   postinc2 0FDE  
                     _lcd_4bit_initialize 103E           __end_of_lcd_4bit_send_char_data 1CAA  
       __end_of_lcd_8bit_send_custom_char 1AAE                lcd_4bit_send_char_data@lcd 000F  
                   ??_ecu_layer_intialize 002F                lcd_4bit_send_char_data@ret 0012  
                   ??_gpio_pin_initialize 000D                      ?_lcd_4bit_initialize 0025  
                        _lcd_send_4bit_en 1E90          lcd_8bit_send_custom_char@mem_pos 002A  
                     _lcd_4bit_set_cursor 1828                    ?_lcd_8bit_send_command 000E  
                        _lcd_send_8bit_en 1E5A               lcd_4bit_send_string_pos@lcd 001A  
             lcd_4bit_send_string_pos@ret 0022               lcd_4bit_send_string_pos@row 001C  
             lcd_4bit_send_string_pos@str 001E            lcd_8bit_send_string_pos@column 0021  
                           __pidataCOMRAM 1EC6                       start_initialization 1D7E  
                    ?_lcd_4bit_set_cursor 0013                       _lcd_8bit_initialize 137C  
   __end_of_gpio_pin_direction_initialize 1654             _gpio_pin_direction_initialize 1510  
                            _lat_register 0060                   ?_application_initialize 0001  
                   ??_lcd_4bit_initialize 0027                      ?_lcd_8bit_initialize 0029  
                 _lcd_8bit_send_char_data 1B3A                               __pdataBANK0 0080  
                     _lcd_8bit_set_cursor 1780              lcd_4bit_send_command@command 0011  
                lcd_8bit_send_command@lcd 000E                  lcd_8bit_send_command@ret 0015  
                             __pbssCOMRAM 007A                     ??_lcd_4bit_set_cursor 0017  
          __end_of_application_initialize 1F00              ?_lcd_8bit_send_char_data_pos 001E  
                    ?_lcd_8bit_set_cursor 0017                     ??_lcd_8bit_initialize 002B  
              ??_lcd_8bit_send_string_pos 0024               lcd_8bit_send_char_data@data 0010  
         gpio_pin_write_logic@_pin_config 0001                 gpio_pin_write_logic@logic 0003  
                               _btn_value 1001                       led_intialized@F3043 007D  
                             __smallconst 1000                     ??_lcd_8bit_set_cursor 001B  
            lcd_8bit_send_custom_char@chr 0028              lcd_8bit_send_custom_char@lcd 0024  
            lcd_8bit_send_custom_char@ret 002B              lcd_8bit_send_custom_char@row 0026  
              lcd_4bit_initialize@counter 0029                 ??_lcd_8bit_send_char_data 0011  
           __end_of_lcd_4bit_send_command 1C38                                 main@F3170 00A4  
                               main@F3164 00BC                                 main@F3172 009C  
                               main@F3166 00B4                                 main@F3174 0094  
                               main@F3168 00AC          gpio_pin_direction_initialize@ret 0009  
                _lcd_4bit_send_string_pos 1976         lcd_8bit_send_char_data_pos@column 0021  
                  gpio_pin_initialize@ret 000E                  __end_of_lcd_send_4bit_en 1EC6  
                         main@customChar1 0030                           main@customChar2 0038  
                         main@customChar3 0040                           main@customChar4 0048  
                         main@customChar5 0050                           main@customChar6 0058  
               lcd_8bit_set_cursor@column 001A                  __end_of_lcd_send_8bit_en 1E90  
                     lcd_send_4bit_en@lcd 000B                       lcd_send_4bit_en@ret 000D  
                 gpio_pin_write_logic@ret 000A                  ?_lcd_4bit_send_char_data 000F  
                               copy_data0 1D92                                 copy_data1 1DB2  
              lcd_4bit_set_cursor@columns 0016                   ??_lcd_8bit_send_command 0011  
                                __Hrparam 0000                                  __Lrparam 0000  
                  lcd_4bit_set_cursor@lcd 0013               __end_of_ecu_layer_intialize 1EFA  
                  lcd_4bit_set_cursor@ret 0019                    lcd_4bit_set_cursor@row 0015  
         __end_of_lcd_8bit_send_char_data 1BC6               __end_of_gpio_pin_initialize 1D16  
          gpio_pin_initialize@_pin_config 000B                ?_lcd_8bit_send_custom_char 0024  
              lcd_8bit_send_char_data@lcd 000E                lcd_8bit_send_char_data@ret 0015  
                     lcd_send_8bit_en@lcd 000B                                  __ptext10 1E5A  
                                __ptext11 103E                                  __ptext20 1510  
                                __ptext12 1976                                  __ptext13 1828  
                                __ptext14 1BC6                                  __ptext15 1C38  
                                __ptext16 1E90                                  __ptext17 1D16  
                                __ptext18 1CAA                                  __ptext19 1654  
                     lcd_send_8bit_en@ret 000D          __end_of_lcd_8bit_send_string_pos 1976  
               lcd_send_4bit@data_command 000D                                  isa$xinst 0000  
             __end_of_lcd_4bit_initialize 11E4              __end_of_gpio_pin_write_logic 1780  
                           _lcd_send_4bit 1D16               __end_of_lcd_4bit_set_cursor 18D0  
                           _port_register 0080               __end_of_lcd_8bit_initialize 1510  
            lcd_8bit_send_command@command 0010     lcd_8bit_send_custom_char@data_counter 002C  
        lcd_8bit_send_command@pin_counter 0016               lcd_4bit_send_char_data@data 0011  
              ??_lcd_4bit_send_string_pos 0020                    lcd_4bit_initialize@lcd 0025  
                  lcd_4bit_initialize@ret 002B  
